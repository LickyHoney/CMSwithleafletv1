{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\phani.kumar.vankadar\\\\OneDrive - Sofigate Oy\\\\phani\\\\cms\\\\hack\\\\VitoCMS2\\\\src\\\\views\\\\App\\\\Todo\\\\TaskList\\\\index.js\";\n\n/* eslint-disable react/jsx-no-comment-textnodes */\n\n/* eslint-disable no-useless-concat */\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport Select from 'react-select';\nimport { Row, Col, Card, CardBody, Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { selectedProject, selectedCategory, getTasks } from \"../../../../store/selectors/todoSelector\";\nimport { connect } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { addTaskAction, closedTaskAction } from \"../../../../store/actions/taskAction\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport uuid from 'react-uuid';\n\nfunction mapStateToProps(state) {\n  return {\n    project: selectedProject(state),\n    category: selectedCategory(state),\n    tasks: getTasks(state)\n  };\n}\n\nconst mapDispatchToProps = dispatch => ({ ...bindActionCreators({\n    addTaskAction,\n    closedTaskAction\n  }, dispatch)\n});\n\nconst taskUsers = [{\n  value: '1',\n  label: 'Andy Mabbett'\n}, {\n  value: '2',\n  label: 'Nik John'\n}, {\n  value: '3',\n  label: 'Ag Bro'\n}];\nconst categories = [{\n  value: '2',\n  label: 'People'\n}, {\n  value: '3',\n  label: 'Files'\n}, {\n  value: '4',\n  label: 'Statistics'\n}];\nconst priorities = ['Expiring', 'Ending', 'Urgent'];\n\nclass Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchTask: '',\n      modal: false,\n      task: []\n    };\n\n    this.toggleModal = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props.tasks);\n    this.setState({\n      task: this.props.tasks\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 12,\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          className: \"iq-card\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            className: \"iq-card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-between align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-date d-flex mr-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: 'ri-calendar-2-line mr-2  text-' + this.props.category.color\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: this.props.project.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"todo-notification d-flex align-items-center\",\n                children: [this.props.category.taskNewCount > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"notification-icon position-relative d-flex align-items-center mr-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                    href: \"#\",\n                    children: /*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"ri-notification-3-line font-size-16\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 53\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"bg-danger text-white\",\n                    children: this.props.category.taskNewCount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 41\n                }, this) : '', /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn iq-bg-primary iq-waves-effect btn-lg\",\n                  onClick: this.toggleModal,\n                  children: \"Add Task\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          className: \"iq-card\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"position-relative\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              role: \"group\",\n              className: \"form-group mb-0\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bv-no-focus-ring\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  placeholder: \"Search\",\n                  name: \"todoTaskSearch\",\n                  className: \"todo-search bg-white form-control\",\n                  onChange: e => this.setState({\n                    searchTask: e.target.value,\n                    task: this.props.tasks.filter(task => e.target.value !== '' ? task.title.toLowerCase().includes(e.target.value.toLowerCase()) : task)\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"iq-card\",\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            className: 'iq-card-body p-0',\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"todo-task-lists m-0 p-0\",\n              children: this.state.task.length > 0 ? this.state.task.map((task, taskIndex) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: 'd-flex align-items-center p-3 ' + (task.status ? '' : 'active-task'),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"user-img img-fluid\",\n                    children: /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: require('../../../../assets/images/user/1.jpg'),\n                      alt: \"story-img\",\n                      className: \"rounded-circle avatar-40\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 139,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"media-support-info ml-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                      className: \"d-inline-block\",\n                      children: task.status ? /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\" \", task.title, \" for \", this.props.project.name, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 65\n                      }, this) : /*#__PURE__*/_jsxDEV(\"del\", {\n                        children: [\" \", task.title, \" for \", this.props.project.name, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 145,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 57\n                    }, this), task.priority === 'Expiring' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge badge-danger ml-3 text-white\",\n                      children: task.priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 150,\n                      columnNumber: 65\n                    }, this) : task.priority === 'Urgent' ? /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge badge-info ml-3 text-white\",\n                      children: task.priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 69\n                    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"badge badge-primary ml-3 text-white\",\n                      children: task.priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"mb-0\",\n                      children: [\"by \", 'test user']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 156,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"iq-card-header-toolbar d-flex align-items-center\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"custom-control custom-checkbox\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"checkbox\",\n                        name: \"todoCheck\",\n                        className: \"custom-control-input\",\n                        id: task.id,\n                        checked: !task.status,\n                        onChange: () => {\n                          this.props.closedTaskAction(task.id);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        className: \"custom-control-label\",\n                        htmlFor: task.id\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 53\n                  }, this)]\n                }, taskIndex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 56\n                }, this);\n              }) : /*#__PURE__*/_jsxDEV(\"li\", {\n                className: 'd-flex align-items-center p-3 ',\n                children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"No Task Found\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: this.state.modal,\n        toggle: this.toggleModal,\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            title: '',\n            userId: 1,\n            categoryId: 1,\n            priority: ''\n          },\n          onSubmit: async values => {\n            await new Promise(resolve => setTimeout(resolve, 500));\n            values.id = uuid();\n            this.props.addTaskAction(values);\n            this.toggleModal();\n          },\n          validationSchema: Yup.object().shape({\n            title: Yup.string().required(\"Required\")\n          }),\n          children: ({\n            values,\n            errors,\n            handleChange,\n            handleBlur,\n            handleSubmit,\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(\"form\", {\n            noValidate: true,\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n              children: [\"Add Task \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-danger\",\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 55\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: 'd-block',\n                  children: [\"Task Title \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 81\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"title\",\n                  type: \"text\",\n                  className: 'form-control ' + (errors.title ? 'is-invalid' : ''),\n                  required: true,\n                  placeholder: \"Enter Task Title\",\n                  onChange: handleChange,\n                  onBlur: handleBlur,\n                  value: values.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"invalid-feedback\",\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: \"Task title is required.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: 'd-block',\n                  children: [\"Assigned To \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 82\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  options: taskUsers,\n                  name: 'userId',\n                  value: values.userId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: 'd-block',\n                  children: [\"Category \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 79\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  options: categories,\n                  name: 'categoryId',\n                  value: values.categoryId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: 'd-block',\n                  children: [\"Priority \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-danger\",\n                    children: \"*\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 79\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 41\n                }, this), priorities.map((priority, priorityIndex) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"custom-control custom-control-inline custom-radio\",\n                    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"radio\",\n                      name: \"priority\",\n                      className: \"custom-control-input\",\n                      id: 'radio_' + priorityIndex,\n                      onChange: handleChange,\n                      value: values.priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"custom-control-label\",\n                      htmlFor: 'radio_' + priorityIndex,\n                      children: priority\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 250,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 52\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                disabled: isSubmitting,\n                children: \"Add Task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 37\n              }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                onClick: this.toggleModal,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);","map":{"version":3,"sources":["C:/Users/phani.kumar.vankadar/OneDrive - Sofigate Oy/phani/cms/hack/VitoCMS2/src/views/App/Todo/TaskList/index.js"],"names":["React","Select","Row","Col","Card","CardBody","Button","Modal","ModalHeader","ModalBody","ModalFooter","selectedProject","selectedCategory","getTasks","connect","bindActionCreators","addTaskAction","closedTaskAction","Formik","Yup","uuid","mapStateToProps","state","project","category","tasks","mapDispatchToProps","dispatch","taskUsers","value","label","categories","priorities","Index","Component","searchTask","modal","task","toggleModal","setState","componentDidMount","console","log","props","render","color","name","taskNewCount","e","target","filter","title","toLowerCase","includes","length","map","taskIndex","status","require","priority","id","userId","categoryId","values","Promise","resolve","setTimeout","object","shape","string","required","errors","handleChange","handleBlur","handleSubmit","isSubmitting","priorityIndex"],"mappings":"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","sourcesContent":["/* eslint-disable react/jsx-no-comment-textnodes */\r\n/* eslint-disable no-useless-concat */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport Select from 'react-select';\r\nimport {Row, Col, Card, CardBody, Button, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport {\r\n    selectedProject,\r\n    selectedCategory, getTasks\r\n} from \"../../../../store/selectors/todoSelector\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {addTaskAction, closedTaskAction} from \"../../../../store/actions/taskAction\";\r\nimport {Formik} from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport uuid from 'react-uuid';\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        project: selectedProject(state),\r\n        category: selectedCategory(state),\r\n        tasks: getTasks(state)\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    ...bindActionCreators(\r\n        {\r\n            addTaskAction,\r\n            closedTaskAction,\r\n        },\r\n        dispatch\r\n    )\r\n})\r\n\r\nconst taskUsers = [\r\n    {\r\n        value: '1',\r\n        label: 'Andy Mabbett'\r\n    },\r\n    {\r\n        value: '2',\r\n        label: 'Nik John'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'Ag Bro'\r\n    }\r\n];\r\n\r\nconst categories = [\r\n    {\r\n        value: '2',\r\n        label: 'People'\r\n    },\r\n    {\r\n        value: '3',\r\n        label: 'Files'\r\n    },\r\n    {\r\n        value: '4',\r\n        label: 'Statistics'\r\n    }\r\n];\r\n\r\nconst priorities = [\r\n    'Expiring', 'Ending', 'Urgent'\r\n];\r\n\r\n\r\nclass Index extends React.Component {\r\n    state = {\r\n        searchTask: '',\r\n        modal: false,\r\n        task: []\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState({modal: !this.state.modal});\r\n    }\r\n\r\n    componentDidMount () {\r\n        console.log(this.props.tasks)\r\n        this.setState({task: this.props.tasks });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col lg={12}>\r\n                    <Card className={\"iq-card\"}>\r\n                        <CardBody className={\"iq-card-body\"}>\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div className=\"todo-date d-flex mr-3\">\r\n                                    <i className={'ri-calendar-2-line mr-2  text-' + this.props.category.color}></i>\r\n                                    <span>{ this.props.project.name }</span>\r\n                                </div>\r\n                                <div className=\"todo-notification d-flex align-items-center\">\r\n                                    {this.props.category.taskNewCount > 0 ?\r\n                                        <div className=\"notification-icon position-relative d-flex align-items-center mr-3\">\r\n                                        <a href=\"#\"><i className=\"ri-notification-3-line font-size-16\"></i></a>\r\n                                        <span className=\"bg-danger text-white\">{this.props.category.taskNewCount}</span>\r\n                                        </div> : ''\r\n                                    }\r\n                                    <button type=\"button\" className=\"btn iq-bg-primary iq-waves-effect btn-lg\" onClick={this.toggleModal}>\r\n                                        Add Task\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                    <Card className={\"iq-card\"}>\r\n                        <form className=\"position-relative\">\r\n                            <div role=\"group\" className=\"form-group mb-0\">\r\n                                <div className=\"bv-no-focus-ring\">\r\n                                    <input type=\"text\" placeholder=\"Search\" name=\"todoTaskSearch\"\r\n                                           className=\"todo-search bg-white form-control\"\r\n                                           onChange={ (e) =>\r\n                                               this.setState({\r\n                                                   searchTask: e.target.value,\r\n                                                   task: this.props.tasks.filter(task => e.target.value !== '' ? task.title.toLowerCase().includes(e.target.value.toLowerCase()) : task )\r\n                                                })\r\n                                           }\r\n                                            />\r\n                                </div>\r\n                              </div>\r\n                            </form>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={12}>\r\n                    <Card className={\"iq-card\"}>\r\n                        <CardBody className={'iq-card-body p-0'}>\r\n                            <ul className=\"todo-task-lists m-0 p-0\">\r\n                                {\r\n                                    this.state.task.length > 0 ?\r\n                                        this.state.task.map((task, taskIndex) => {\r\n                                                return <li key={taskIndex} className={'d-flex align-items-center p-3 ' + (task.status ? '' : 'active-task')}>\r\n                                                    <div className=\"user-img img-fluid\">\r\n                                                        <img src={require('../../../../assets/images/user/1.jpg')} alt=\"story-img\" className=\"rounded-circle avatar-40\" />\r\n                                                    </div>\r\n                                                    <div className=\"media-support-info ml-3\">\r\n                                                        <h6 className=\"d-inline-block\">\r\n                                                            {task.status ?\r\n                                                                <span> { task.title } for { this.props.project.name } </span> :\r\n                                                                <del> { task.title } for { this.props.project.name } </del>\r\n                                                            }\r\n                                                        </h6>\r\n                                                        {\r\n                                                            task.priority === 'Expiring' ?\r\n                                                                <span className=\"badge badge-danger ml-3 text-white\">{ task.priority }</span> :\r\n                                                                (task.priority === 'Urgent' ?\r\n                                                                    <span className=\"badge badge-info ml-3 text-white\">{ task.priority }</span> :\r\n                                                                    <span className=\"badge badge-primary ml-3 text-white\">{ task.priority }</span>\r\n                                                                )\r\n                                                        }\r\n                                                        <p className=\"mb-0\">by { 'test user' }</p>\r\n                                                    </div>\r\n                                                    <div className=\"iq-card-header-toolbar d-flex align-items-center\">\r\n                                                        <div className=\"custom-control custom-checkbox\">\r\n                                                            <input type=\"checkbox\" name=\"todoCheck\" className=\"custom-control-input\" id={task.id}\r\n                                                                checked={!task.status}\r\n                                                                onChange={ () => {\r\n                                                                    this.props.closedTaskAction(task.id);\r\n                                                                } }\r\n                                                                    />\r\n                                                            <label className=\"custom-control-label\" htmlFor={task.id}></label>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </li>\r\n                                            }) : \r\n                                            (\r\n                                                <li className={'d-flex align-items-center p-3 '}>\r\n                                                    <h6>No Task Found</h6>\r\n                                                </li>\r\n                                            )\r\n                                }\r\n                            </ul>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Col>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggleModal}>\r\n                    <Formik\r\n                        initialValues={{ title: '', userId: 1, categoryId: 1, priority: ''  }}\r\n                        onSubmit={async values => {\r\n                            await new Promise(resolve => setTimeout(resolve, 500));\r\n                            values.id = uuid();\r\n                            this.props.addTaskAction(values);\r\n\r\n                            this.toggleModal();\r\n                        }}\r\n                        validationSchema={\r\n                            Yup.object().shape({\r\n                                title: Yup.string().required(\"Required\")\r\n                            })\r\n                        }\r\n                    >\r\n                        {({\r\n                              values,\r\n                              errors,\r\n                              handleChange,\r\n                              handleBlur,\r\n                              handleSubmit,\r\n                              isSubmitting\r\n                          }) => (\r\n                            <form noValidate onSubmit={handleSubmit}>\r\n                                <ModalHeader>Add Task <span className=\"text-danger\">*</span></ModalHeader>\r\n                                <ModalBody>\r\n                                    <div className='form-group'>\r\n                                        <label className={'d-block'}>Task Title <span className=\"text-danger\">*</span></label>\r\n                                        <input id=\"title\" type=\"text\"\r\n                                               className={'form-control '+\r\n                                               (errors.title ? 'is-invalid' : '')}\r\n                                               required\r\n                                               placeholder=\"Enter Task Title\"\r\n                                               onChange={handleChange}\r\n                                               onBlur={handleBlur}\r\n                                               value={values.title} />\r\n                                        <div className=\"invalid-feedback\">\r\n                                            <span>Task title is required.</span>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label className={'d-block'}>Assigned To <span className=\"text-danger\">*</span></label>\r\n                                        <Select\r\n                                            options={taskUsers}\r\n                                            name={'userId'}\r\n                                            value={values.userId}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label className={'d-block'}>Category <span className=\"text-danger\">*</span></label>\r\n                                        <Select\r\n                                            options={categories}\r\n                                            name={'categoryId'}\r\n                                            value={values.categoryId}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='form-group'>\r\n                                        <label className={'d-block'}>Priority <span className=\"text-danger\">*</span></label>\r\n                                        {priorities.map((priority, priorityIndex) => {\r\n                                            return <div className=\"custom-control custom-control-inline custom-radio\">\r\n                                                <input type=\"radio\" name=\"priority\" className=\"custom-control-input\"\r\n                                                       id={'radio_'+priorityIndex }\r\n                                                       onChange={handleChange}\r\n                                                       value={values.priority}\r\n                                                />\r\n                                                <label className=\"custom-control-label\" htmlFor={'radio_'+priorityIndex }>\r\n                                                    { priority }\r\n                                                </label>\r\n                                            </div>\r\n                                        })}\r\n                                    </div>\r\n                                </ModalBody>\r\n                                <ModalFooter>\r\n                                    <Button color=\"primary\" disabled={isSubmitting}>Add Task</Button>{' '}\r\n                                    <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\r\n                                </ModalFooter>\r\n                            </form>\r\n                        )}\r\n                    </Formik>\r\n\r\n                </Modal>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Index);\r\n"]},"metadata":{},"sourceType":"module"}