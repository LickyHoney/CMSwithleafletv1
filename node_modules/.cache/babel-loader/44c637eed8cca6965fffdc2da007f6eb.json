{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\phani.kumar.vankadar\\\\OneDrive - Sofigate Oy\\\\phani\\\\cms\\\\hack\\\\VitoCMS2\\\\src\\\\views\\\\Tables\\\\EditableTables\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card, CardBody, CardTitle, Col, Row } from \"reactstrap\";\nimport { index } from \"../../../config/pluginsInit\";\nimport { Grid, Table, TableHeaderRow, TableEditColumn, TableInlineCellEditing } from '@devexpress/dx-react-grid-bootstrap4';\nimport { EditingState } from \"@devexpress/dx-react-grid\";\n\nconst getRowId = row => row.id;\n\nconst FocusableCell = ({\n  onClick,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Table.Cell, { ...restProps,\n  tabIndex: 0,\n  onFocus: onClick\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 5\n}, this);\n\n_c = FocusableCell;\n\nconst Index = props => {\n  _s();\n\n  const [columns] = useState([{\n    title: \"Name\",\n    name: \"name\"\n  }, {\n    title: \"Position\",\n    name: \"position\",\n    sortable: true\n  }, {\n    title: \"Office\",\n    name: \"office\",\n    sortable: true\n  }, {\n    title: \"Age\",\n    name: \"age\",\n    sortable: true\n  }, {\n    title: \"Start date\",\n    name: \"start_date\",\n    sortable: true\n  }, {\n    title: \"Salary\",\n    name: \"salary\",\n    sortable: true\n  }]);\n  const [rows, setRows] = useState([{\n    \"id\": 1,\n    \"name\": \"Tiger Nixon\",\n    \"position\": \"System Architect\",\n    \"office\": \"Edinburgh\",\n    \"age\": \"61\",\n    \"start_date\": \"2011/04/25\",\n    \"salary\": \"$320,800\"\n  }, {\n    \"id\": 2,\n    \"name\": \"Garrett Winters\",\n    \"position\": \"Accountant\",\n    \"office\": \"Tokyo\",\n    \"age\": \"63\",\n    \"start_date\": \"2011/07/25\",\n    \"salary\": \"$170,750\"\n  }, {\n    \"id\": 3,\n    \"name\": \"Ashton Cox\",\n    \"position\": \"Junior Technical Author\",\n    \"office\": \"San Francisco\",\n    \"age\": \"66\",\n    \"start_date\": \"2009/01/12\",\n    \"salary\": \"$86,000\"\n  }, {\n    \"id\": 4,\n    \"name\": \"Cedric Kelly\",\n    \"position\": \"Senior Javascript Developer\",\n    \"office\": \"Edinburgh\",\n    \"age\": \"22\",\n    \"start_date\": \"2012/03/29\",\n    \"salary\": \"$433,060\"\n  }, {\n    \"id\": 5,\n    \"name\": \"Airi Satou\",\n    \"position\": \"Accountant\",\n    \"office\": \"Tokyo\",\n    \"age\": \"33\",\n    \"start_date\": \"2008/11/28\",\n    \"salary\": \"$162,700\"\n  }]);\n  const [editingCells, setEditingCells] = useState([]);\n\n  const commitChanges = ({\n    added,\n    changed,\n    deleted\n  }) => {\n    let changedRows;\n\n    if (added) {\n      const startingAddedId = rows.length > 0 ? Math.max(rows[rows.length - 1].id, rows[0].id) + 1 : 0;\n      changedRows = [...added.map((row, index) => ({\n        id: startingAddedId + index,\n        ...row\n      })), ...rows];\n      setEditingCells([{\n        rowId: startingAddedId,\n        columnName: columns[0].name\n      }]);\n    }\n\n    if (changed) {\n      changedRows = rows.map(row => changed[row.id] ? { ...row,\n        ...changed[row.id]\n      } : row);\n    }\n\n    if (deleted) {\n      const deletedSet = new Set(deleted);\n      changedRows = rows.filter(row => !deletedSet.has(row.id));\n    }\n\n    setRows(changedRows);\n  };\n\n  const addEmptyRow = () => commitChanges({\n    added: [{}]\n  });\n\n  useEffect(() => {\n    index();\n  });\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      sm: \"12\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"iq-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"iq-card-header d-flex justify-content-between\",\n          children: /*#__PURE__*/_jsxDEV(CardTitle, {\n            className: \"iq-header-title\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"card-title\",\n              children: \"Editable Table\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n          className: \"iq-card-body\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            rows: rows,\n            columns: columns,\n            getRowId: getRowId,\n            children: [/*#__PURE__*/_jsxDEV(EditingState, {\n              onCommitChanges: commitChanges,\n              editingCells: editingCells,\n              onEditingCellsChange: setEditingCells,\n              addedRows: [],\n              onAddedRowsChange: addEmptyRow\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Table, {\n              cellComponent: FocusableCell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableHeaderRow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableInlineCellEditing, {\n              selectTextOnEditStart: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableEditColumn, {\n              showAddCommand: true,\n              showDeleteCommand: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Index, \"MVTl3J5feSrAKMkLAmOek4ajYtU=\");\n\n_c2 = Index;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FocusableCell\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["C:/Users/phani.kumar.vankadar/OneDrive - Sofigate Oy/phani/cms/hack/VitoCMS2/src/views/Tables/EditableTables/index.js"],"names":["React","useEffect","useState","Card","CardBody","CardTitle","Col","Row","index","Grid","Table","TableHeaderRow","TableEditColumn","TableInlineCellEditing","EditingState","getRowId","row","id","FocusableCell","onClick","restProps","Index","props","columns","title","name","sortable","rows","setRows","editingCells","setEditingCells","commitChanges","added","changed","deleted","changedRows","startingAddedId","length","Math","max","map","rowId","columnName","deletedSet","Set","filter","has","addEmptyRow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card, CardBody, CardTitle, Col, Row } from \"reactstrap\";\r\nimport { index } from \"../../../config/pluginsInit\";\r\nimport { Grid, Table, TableHeaderRow, TableEditColumn, TableInlineCellEditing } from '@devexpress/dx-react-grid-bootstrap4';\r\nimport { EditingState } from \"@devexpress/dx-react-grid\";\r\n\r\n\r\nconst getRowId = row => row.id;\r\n\r\nconst FocusableCell = ({ onClick, ...restProps }) => (\r\n    <Table.Cell {...restProps} tabIndex={0} onFocus={onClick} />\r\n);\r\n\r\nconst Index = props => {\r\n\r\n    const [columns] = useState([\r\n        {\r\n            title: \"Name\",\r\n            name: \"name\",\r\n        },\r\n        {\r\n            title: \"Position\",\r\n            name: \"position\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            title: \"Office\",\r\n            name: \"office\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            title: \"Age\",\r\n            name: \"age\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            title: \"Start date\",\r\n            name: \"start_date\",\r\n            sortable: true,\r\n        },\r\n        {\r\n            title: \"Salary\",\r\n            name: \"salary\",\r\n            sortable: true,\r\n        },\r\n    ]);\r\n    const [rows, setRows] = useState([\r\n        {\r\n            \"id\": 1,\r\n            \"name\": \"Tiger Nixon\",\r\n            \"position\": \"System Architect\",\r\n            \"office\": \"Edinburgh\",\r\n            \"age\": \"61\",\r\n            \"start_date\": \"2011/04/25\",\r\n            \"salary\": \"$320,800\"\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Garrett Winters\",\r\n            \"position\": \"Accountant\",\r\n            \"office\": \"Tokyo\",\r\n            \"age\": \"63\",\r\n            \"start_date\": \"2011/07/25\",\r\n            \"salary\": \"$170,750\"\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"Ashton Cox\",\r\n            \"position\": \"Junior Technical Author\",\r\n            \"office\": \"San Francisco\",\r\n            \"age\": \"66\",\r\n            \"start_date\": \"2009/01/12\",\r\n            \"salary\": \"$86,000\"\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"name\": \"Cedric Kelly\",\r\n            \"position\": \"Senior Javascript Developer\",\r\n            \"office\": \"Edinburgh\",\r\n            \"age\": \"22\",\r\n            \"start_date\": \"2012/03/29\",\r\n            \"salary\": \"$433,060\"\r\n        },\r\n        {\r\n            \"id\": 5,\r\n            \"name\": \"Airi Satou\",\r\n            \"position\": \"Accountant\",\r\n            \"office\": \"Tokyo\",\r\n            \"age\": \"33\",\r\n            \"start_date\": \"2008/11/28\",\r\n            \"salary\": \"$162,700\"\r\n        }\r\n    ]);\r\n    const [editingCells, setEditingCells] = useState([]);\r\n\r\n    const commitChanges = ({ added, changed, deleted }) => {\r\n        let changedRows;\r\n        if (added) {\r\n            const startingAddedId = rows.length > 0\r\n                ? Math.max(rows[rows.length - 1].id, rows[0].id) + 1\r\n                : 0;\r\n            changedRows = [\r\n                ...added.map((row, index) => ({\r\n                    id: startingAddedId + index,\r\n                    ...row,\r\n                })),\r\n                ...rows,\r\n            ];\r\n            setEditingCells([{ rowId: startingAddedId, columnName: columns[0].name }]);\r\n        }\r\n        if (changed) {\r\n            changedRows = rows.map(row => (changed[row.id] ? { ...row, ...changed[row.id] } : row));\r\n        }\r\n        if (deleted) {\r\n            const deletedSet = new Set(deleted);\r\n            changedRows = rows.filter(row => !deletedSet.has(row.id));\r\n        }\r\n\r\n        setRows(changedRows);\r\n    };\r\n\r\n    const addEmptyRow = () => commitChanges({ added: [{}] });\r\n\r\n    useEffect(() => {\r\n        index();\r\n    });\r\n\r\n    return (\r\n        <Row>\r\n            <Col sm=\"12\">\r\n                <Card className=\"iq-card\">\r\n                    <div className=\"iq-card-header d-flex justify-content-between\">\r\n                        <CardTitle className=\"iq-header-title\">\r\n                            <h4 className=\"card-title\">Editable Table</h4>\r\n                        </CardTitle>\r\n                    </div>\r\n                    <CardBody className=\"iq-card-body\">\r\n                        <Grid\r\n                            rows={rows}\r\n                            columns={columns}\r\n                            getRowId={getRowId}\r\n                        >\r\n                            <EditingState\r\n                                onCommitChanges={commitChanges}\r\n                                editingCells={editingCells}\r\n                                onEditingCellsChange={setEditingCells}\r\n                                addedRows={[]}\r\n                                onAddedRowsChange={addEmptyRow}\r\n                            />\r\n                            <Table cellComponent={FocusableCell} />\r\n                            <TableHeaderRow />\r\n                            <TableInlineCellEditing selectTextOnEditStart />\r\n                            <TableEditColumn\r\n                                showAddCommand\r\n                                showDeleteCommand\r\n                            />\r\n                        </Grid>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n};\r\n\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}