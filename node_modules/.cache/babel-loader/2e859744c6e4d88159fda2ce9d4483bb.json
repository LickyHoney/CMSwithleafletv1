{"ast":null,"code":"import { myFirebase } from '../../../constants/firebase';\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\n\nconst requestLogin = () => {\n  return {\n    type: LOGIN_REQUEST\n  };\n};\n\nconst receiveLogin = user => {\n  return {\n    type: LOGIN_SUCCESS,\n    user\n  };\n};\n\nconst loginError = () => {\n  return {\n    type: LOGIN_FAILURE\n  };\n};\n\nconst requestLogout = () => {\n  return {\n    type: LOGOUT_REQUEST\n  };\n};\n\nconst receiveLogout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\nconst logoutError = () => {\n  return {\n    type: LOGOUT_FAILURE\n  };\n};\n\nconst verifyRequest = () => {\n  return {\n    type: VERIFY_REQUEST\n  };\n};\n\nconst verifySuccess = () => {\n  return {\n    type: VERIFY_SUCCESS\n  };\n};\n\nexport const loginUser = (email, password) => dispatch => {\n  dispatch(requestLogin());\n  myFirebase.auth().signInWithEmailAndPassword(email, password).then(user => {\n    dispatch(receiveLogin(user));\n  }).catch(error => {\n    //Do something with the error if you want!\n    dispatch(loginError());\n  });\n};\nexport const logoutUser = () => dispatch => {\n  dispatch(requestLogout());\n  myFirebase.auth().signOut().then(() => {\n    dispatch(receiveLogout());\n  }).catch(error => {\n    //Do something with the error if you want!\n    dispatch(logoutError());\n  });\n};\nexport const verifyAuth = () => dispatch => {\n  dispatch(verifyRequest());\n  myFirebase.auth().onAuthStateChanged(user => {\n    if (user !== null) {\n      dispatch(receiveLogin(user));\n    }\n\n    dispatch(verifySuccess());\n  });\n};","map":{"version":3,"sources":["C:/Users/phani.kumar.vankadar/OneDrive - Sofigate Oy/phani/cms/hack/VitoCMS2/src/store/actions/firebaseAuth/auth.js"],"names":["myFirebase","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","VERIFY_REQUEST","VERIFY_SUCCESS","requestLogin","type","receiveLogin","user","loginError","requestLogout","receiveLogout","logoutError","verifyRequest","verifySuccess","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","catch","error","logoutUser","signOut","verifyAuth","onAuthStateChanged"],"mappings":"AAAA,SAASA,UAAT,QAA2B,6BAA3B;AAEA,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,MAAMC,cAAc,GAAG,gBAAvB;;AAEP,MAAMC,YAAY,GAAG,MAAM;AACzB,SAAO;AACLC,IAAAA,IAAI,EAAET;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMU,YAAY,GAAGC,IAAI,IAAI;AAC3B,SAAO;AACLF,IAAAA,IAAI,EAAER,aADD;AAELU,IAAAA;AAFK,GAAP;AAID,CALD;;AAOA,MAAMC,UAAU,GAAG,MAAM;AACvB,SAAO;AACLH,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLJ,IAAAA,IAAI,EAAEN;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLL,IAAAA,IAAI,EAAEL;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,WAAW,GAAG,MAAM;AACxB,SAAO;AACLN,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLP,IAAAA,IAAI,EAAEH;AADD,GAAP;AAGD,CAJD;;AAMA,MAAMW,aAAa,GAAG,MAAM;AAC1B,SAAO;AACLR,IAAAA,IAAI,EAAEF;AADD,GAAP;AAGD,CAJD;;AAMA,OAAO,MAAMW,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqBC,QAAQ,IAAI;AACxDA,EAAAA,QAAQ,CAACb,YAAY,EAAb,CAAR;AACAT,EAAAA,UAAU,CACPuB,IADH,GAEGC,0BAFH,CAE8BJ,KAF9B,EAEqCC,QAFrC,EAGGI,IAHH,CAGQb,IAAI,IAAI;AACZU,IAAAA,QAAQ,CAACX,YAAY,CAACC,IAAD,CAAb,CAAR;AACD,GALH,EAMGc,KANH,CAMSC,KAAK,IAAI;AACd;AACAL,IAAAA,QAAQ,CAACT,UAAU,EAAX,CAAR;AACD,GATH;AAUD,CAZM;AAcP,OAAO,MAAMe,UAAU,GAAG,MAAMN,QAAQ,IAAI;AAC1CA,EAAAA,QAAQ,CAACR,aAAa,EAAd,CAAR;AACAd,EAAAA,UAAU,CACPuB,IADH,GAEGM,OAFH,GAGGJ,IAHH,CAGQ,MAAM;AACVH,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACD,GALH,EAMGW,KANH,CAMSC,KAAK,IAAI;AACd;AACAL,IAAAA,QAAQ,CAACN,WAAW,EAAZ,CAAR;AACD,GATH;AAUD,CAZM;AAcP,OAAO,MAAMc,UAAU,GAAG,MAAMR,QAAQ,IAAI;AAC1CA,EAAAA,QAAQ,CAACL,aAAa,EAAd,CAAR;AACAjB,EAAAA,UAAU,CACPuB,IADH,GAEGQ,kBAFH,CAEsBnB,IAAI,IAAI;AAC1B,QAAIA,IAAI,KAAK,IAAb,EAAmB;AACjBU,MAAAA,QAAQ,CAACX,YAAY,CAACC,IAAD,CAAb,CAAR;AACD;;AACDU,IAAAA,QAAQ,CAACJ,aAAa,EAAd,CAAR;AACD,GAPH;AAQD,CAVM","sourcesContent":["import { myFirebase } from '../../../constants/firebase';\r\n\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\nconst requestLogin = () => {\r\n  return {\r\n    type: LOGIN_REQUEST\r\n  };\r\n};\r\n\r\nconst receiveLogin = user => {\r\n  return {\r\n    type: LOGIN_SUCCESS,\r\n    user\r\n  };\r\n};\r\n\r\nconst loginError = () => {\r\n  return {\r\n    type: LOGIN_FAILURE\r\n  };\r\n};\r\n\r\nconst requestLogout = () => {\r\n  return {\r\n    type: LOGOUT_REQUEST\r\n  };\r\n};\r\n\r\nconst receiveLogout = () => {\r\n  return {\r\n    type: LOGOUT_SUCCESS\r\n  };\r\n};\r\n\r\nconst logoutError = () => {\r\n  return {\r\n    type: LOGOUT_FAILURE\r\n  };\r\n};\r\n\r\nconst verifyRequest = () => {\r\n  return {\r\n    type: VERIFY_REQUEST\r\n  };\r\n};\r\n\r\nconst verifySuccess = () => {\r\n  return {\r\n    type: VERIFY_SUCCESS\r\n  };\r\n};\r\n\r\nexport const loginUser = (email, password) => dispatch => {\r\n  dispatch(requestLogin());\r\n  myFirebase\r\n    .auth()\r\n    .signInWithEmailAndPassword(email, password)\r\n    .then(user => {\r\n      dispatch(receiveLogin(user));\r\n    })\r\n    .catch(error => {\r\n      //Do something with the error if you want!\r\n      dispatch(loginError());\r\n    });\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n  dispatch(requestLogout());\r\n  myFirebase\r\n    .auth()\r\n    .signOut()\r\n    .then(() => {\r\n      dispatch(receiveLogout());\r\n    })\r\n    .catch(error => {\r\n      //Do something with the error if you want!\r\n      dispatch(logoutError());\r\n    });\r\n};\r\n\r\nexport const verifyAuth = () => dispatch => {\r\n  dispatch(verifyRequest());\r\n  myFirebase\r\n    .auth()\r\n    .onAuthStateChanged(user => {\r\n      if (user !== null) {\r\n        dispatch(receiveLogin(user));\r\n      }\r\n      dispatch(verifySuccess());\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}