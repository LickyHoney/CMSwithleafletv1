{"ast":null,"code":"/* eslint-disable array-callback-return */\nimport $ from 'jquery';\nimport Scrollbar from 'smooth-scrollbar';\nimport ApexCharts from 'apexcharts';\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport flatpickr from \"flatpickr\";\nlet WOW;\n\nif (typeof window !== 'undefined') {\n  window.jQuery = $;\n  window.$ = $;\n  window.Waypoint = require('waypoints/lib/jquery.waypoints.min');\n  WOW = require('wowjs');\n\n  require('select2/dist/js/select2.min');\n\n  require('jquery.counterup');\n}\n\nconst index = () => {\n  $(document).unbind();\n  loaderInit();\n  wowInit();\n  countDownInit();\n  counterInit();\n  sideBarToggle();\n  copyCode();\n  scrollbarInit();\n  navigationScripts();\n  fullScreenInit();\n  ticketBookInit();\n  preventWithAtag();\n  initSelect2();\n  inItAccordionScript();\n  homeChartOne();\n  homeChartTwo();\n  homeChartThree();\n  homeChartFive();\n  homeChartSix();\n  todoList();\n  todo();\n  caleder();\n  chartHome1();\n  search();\n};\n\nconst caleder = () => {\n  flatpickr(\".flatpicker\", {\n    inline: true\n  });\n};\n\nconst search = () => {\n  $(document).on('click', '.searchbox .search-input', function () {\n    $(this).next().next().toggleClass('show-data');\n  });\n};\n\nconst getActiveLink = item => {\n  let link = item.link === undefined || item.link === '/' ? '' : item.link;\n  let active = false;\n  let windowPath = window.location.pathname;\n  let windowLength = windowPath.length - 1;\n  let removePreg = windowPath[windowLength];\n\n  if (removePreg === '/') {\n    windowPath = windowPath.slice(0, windowLength);\n  }\n\n  if (item.children !== undefined) {\n    item.children.filter(function (child) {\n      let base_path = process.env.PUBLIC_URL + child.link;\n\n      if (base_path === windowPath) {\n        active = true;\n      }\n    });\n  } else {\n    let base_path = process.env.PUBLIC_URL + link;\n\n    if (base_path === windowPath) {\n      active = true;\n    }\n  }\n\n  return active;\n}; // Function to prevent with A tag...\n\n\nconst preventWithAtag = () => {\n  $(document).on('click', 'a', function (e) {\n    e.preventDefault();\n  });\n}; // Function to Init select2...\n\n\nconst initSelect2 = () => {\n  $('.select2jsMultiSelect').select2({\n    tags: true\n  });\n}; // Function for the Loader...\n\n\nconst loaderInit = () => {\n  $('#load').fadeOut();\n  $('#loading').delay(1000).fadeOut('slow');\n}; // Accordion script...\n\n\nconst inItAccordionScript = () => {\n  $('.iq-accordion .iq-accordion-block .accordion-details').hide();\n  $('.iq-accordion .iq-accordion-block:first').addClass('accordion-active').children().slideDown('slow');\n  $(document).on(\"click\", '.iq-accordion .iq-accordion-block', function () {\n    if ($(this).children('div.accordion-details').is(':hidden')) {\n      $('.iq-accordion .iq-accordion-block').removeClass('accordion-active').children('div.accordion-details ').slideUp('slow');\n      $(this).toggleClass('accordion-active').children('div.accordion-details ').slideDown('slow');\n    }\n  });\n};\n\nconst scrollbarInit = () => {\n  /*---------------------------------------------------------------------\r\n   Header fixed\r\n   -----------------------------------------------------------------------*/\n  let element = document.getElementById('sidebar-scrollbar');\n\n  if (element != null) {\n    Scrollbar.init(document.querySelector('#sidebar-scrollbar'));\n  }\n};\n\nconst fullScreenInit = () => {\n  $(document).on('click', '.iq-full-screen', function () {\n    let elem = $(this);\n\n    if (!document.fullscreenElement && !document.mozFullScreenElement && // Mozilla\n    !document.webkitFullscreenElement && // Webkit-Browser\n    !document.msFullscreenElement) {\n      // MS IE ab version 11\n      if (document.documentElement.requestFullscreen) {\n        document.documentElement.requestFullscreen();\n      } else if (document.documentElement.mozRequestFullScreen) {\n        document.documentElement.mozRequestFullScreen();\n      } else if (document.documentElement.webkitRequestFullscreen) {\n        document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      } else if (document.documentElement.msRequestFullscreen) {\n        document.documentElement.msRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n      }\n    } else {\n      if (document.cancelFullScreen) {\n        document.cancelFullScreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitCancelFullScreen) {\n        document.webkitCancelFullScreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n    }\n\n    elem.find('i').toggleClass('ri-fullscreen-line').toggleClass('ri-fullscreen-exit-line');\n  });\n};\n\nconst navigationScripts = () => {\n  $(document).on('click', function (e) {\n    let myTargetElement = e.target;\n    let selector, mainElement;\n\n    if ($(myTargetElement).hasClass('search-toggle') || $(myTargetElement).parent().hasClass('search-toggle') || $(myTargetElement).parent().parent().hasClass('search-toggle')) {\n      if ($(myTargetElement).hasClass('search-toggle')) {\n        selector = $(myTargetElement).parent();\n        mainElement = $(myTargetElement);\n      } else if ($(myTargetElement).parent().hasClass('search-toggle')) {\n        selector = $(myTargetElement).parent().parent();\n        mainElement = $(myTargetElement).parent();\n      } else if ($(myTargetElement).parent().parent().hasClass('search-toggle')) {\n        selector = $(myTargetElement).parent().parent().parent();\n        mainElement = $(myTargetElement).parent().parent();\n      }\n\n      if (!mainElement.hasClass('active') && $(\".navbar-list li\").find('.active')) {\n        $('.navbar-list li').removeClass('iq-show');\n        $('.navbar-list li .search-toggle').removeClass('active');\n      }\n\n      selector.toggleClass('iq-show');\n      mainElement.toggleClass('active');\n      e.preventDefault();\n    } else if ($(myTargetElement).is('.search-input')) {} else {\n      $('.navbar-list li').removeClass('iq-show');\n      $('.navbar-list li .search-toggle').removeClass('active');\n    }\n  });\n};\n\nconst wowInit = () => {\n  const elementExist = checkElement('class', 'wow');\n\n  if (elementExist) {\n    new WOW.WOW({\n      boxClass: 'wow',\n      animateClass: 'animated',\n      offset: 0,\n      live: false\n    }).init();\n  }\n};\n\nconst countDownInit = () => {\n  const elementExist = checkElement('class', 'countdown');\n\n  if (elementExist) {\n    /*$(\".countdown\").countdown();*/\n  }\n};\n\nconst counterInit = () => {\n  const elementExist = checkElement('class', 'counter');\n\n  if (elementExist) {\n    $('.counter').counterUp({\n      delay: 10,\n      time: 1000\n    });\n  }\n};\n\nconst checkElement = (type, element) => {\n  let found = false;\n  let elements; // eslint-disable-next-line default-case\n\n  switch (type) {\n    case 'class':\n      elements = document.getElementsByClassName(element);\n\n      if (elements !== undefined && elements !== null && elements.length > 0) {\n        found = true;\n      }\n\n      break;\n\n    case 'id':\n      elements = document.getElementById(element);\n\n      if (elements !== undefined && elements !== null) {\n        found = true;\n      }\n\n      break;\n  }\n\n  return found;\n};\n\nconst copyCode = () => {\n  /*$(document).on('click','[data-copy=\"true\"]',function (e) {\r\n      let _this = $(this);\r\n      let target = _this.attr('data-copy-target');\r\n      /!* Copy the text inside the text field *!/\r\n      let text = document.querySelector(target).innerText;\r\n      let elem = document.createElement(\"textarea\");\r\n      document.body.appendChild(elem);\r\n      elem.value = text;\r\n      /!* Select the text field *!/\r\n      elem.select();\r\n      elem.setSelectionRange(0, 99999); /!*For mobile devices*!/\r\n      /!* Copy the text inside the text field *!/\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(elem);\r\n      tooltipUpdate(_this,'Copied');\r\n      _this.tooltip('show');\r\n      setTimeout(() => {\r\n          tooltipUpdate(_this,'Copy')\r\n      },2000)\r\n  })\r\n    function tooltipUpdate(_this,text) {\r\n      _this.attr('title',text);\r\n      _this.tooltip('dispose');\r\n      _this.tooltip()\r\n  }*/\n};\n\nconst sideBarToggle = () => {\n  // $(document).on('click', '.iq-sidebar-menu > ul > li > a', function () {\n  //   var checkElement = $(this).next();\n  //   $('.iq-sidebar-menu li').removeClass('active show');\n  //   $('.iq-sidebar-menu ul').removeClass('show');\n  //   $(this).closest('li').addClass('active');\n  //   if ((checkElement.is('ul')) && (checkElement.is(':visible'))) {\n  //     $(this).closest('li').removeClass('active show');\n  //     checkElement.slideUp('normal');\n  //   }\n  //   if ((checkElement.is('ul')) && (!checkElement.is(':visible'))) {\n  //     $('.iq-sidebar-menu ul ul:visible').slideUp('normal');\n  //     checkElement.slideDown('normal').addClass('show');\n  //   }\n  //   let length = $(this).closest('li').find('ul').children().length;\n  //   if (length === 0) {\n  //     return true;\n  //   } else {\n  //     return false;\n  //   }\n  // });\n  $('.iq-sidebar-menu .active').each(function (ele, index) {\n    $(this).find('.iq-submenu').addClass('show');\n    $(this).next().attr(\"aria-expanded\", \"true\");\n  });\n  $(\".iq-waves-effect\").click(function (e) {\n    // Remove any old one\n    $(\".ripple\").remove(); // Setup\n\n    let posX = $(this).offset().left,\n        posY = $(this).offset().top,\n        buttonWidth = $(this).width(),\n        buttonHeight = $(this).height(); // Add the element\n\n    $(this).prepend(\"<span class='ripple' />\"); // Make it round!\n\n    if (buttonWidth >= buttonHeight) {\n      buttonHeight = buttonWidth;\n    } else {\n      buttonWidth = buttonHeight;\n    } // Get the center of the element\n\n\n    var x = e.pageX - posX - buttonWidth / 2;\n    var y = e.pageY - posY - buttonHeight / 2; // Add the ripples CSS and start the animation\n\n    $(\".ripple\").css({\n      width: buttonWidth,\n      height: buttonHeight,\n      top: y + 'px',\n      left: x + 'px'\n    }).addClass(\"rippleEffect\");\n  });\n  $(document).on('click', '.wrapper-menu', function () {\n    $(this).toggleClass('open');\n  });\n  $(document).on('click', \".wrapper-menu\", function () {\n    $(\"body\").toggleClass(\"sidebar-main\");\n  });\n};\n\nconst dynamicChart = () => {\n  // eslint-disable-next-line no-unused-vars\n  var lastDate = 0;\n  var data = [];\n  var TICKINTERVAL = 86400000;\n  let XAXISRANGE = 777600000;\n\n  function getDayWiseTimeSeries(baseval, count, yrange) {\n    var i = 0;\n\n    while (i < count) {\n      var x = baseval;\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n      data.push({\n        x,\n        y\n      });\n      lastDate = baseval;\n      baseval += TICKINTERVAL;\n      i++;\n    }\n  }\n\n  getDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {\n    min: 10,\n    max: 90\n  });\n  /*function getNewSeries(baseval, yrange) {\r\n      var newDate = baseval + TICKINTERVAL;\r\n      lastDate = newDate;\r\n      for (var i = 0; i < data.length - 10; i++) {\r\n          data[i].x = newDate - XAXISRANGE - TICKINTERVAL;\r\n          data[i].y = 0;\r\n      }\r\n      data.push({\r\n          x: newDate,\r\n          y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\r\n      })\r\n    }\r\n    function resetData() {\r\n      // Alternatively, you can also reset the data at certain intervals to prevent creating a huge series\r\n      data = data.slice(data.length - 10, data.length);\r\n  }*/\n\n  let options = {\n    chart: {\n      height: 150,\n      type: 'area',\n      animations: {\n        enabled: true,\n        easing: 'linear',\n        dynamicAnimation: {\n          speed: 1000\n        }\n      },\n      toolbar: {\n        show: false\n      },\n      sparkline: {\n        enabled: true\n      },\n      group: 'sparklines'\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'smooth',\n      width: 3\n    },\n    series: [{\n      data: data\n    }],\n    markers: {\n      size: 4\n    },\n    xaxis: {\n      type: 'datetime',\n      range: XAXISRANGE\n    },\n    yaxis: {\n      max: 100\n    },\n    colors: ['#0084ff'],\n    fill: {\n      type: 'gradient',\n      gradient: {\n        shadeIntensity: 1,\n        inverseColors: false,\n        opacityFrom: 0.5,\n        opacityTo: 0,\n        stops: [0, 90, 100]\n      }\n    },\n    legend: {\n      show: false\n    }\n  };\n  return options;\n};\n\nconst ticketBookInit = () => {\n  $('.iq-film-block').find('span').text(0);\n  $(document).on('click', '.iq-booking-screen .iq-booking-no .list-inline-item .iq-seat ', function (e) {\n    e.preventDefault();\n    let sheet = 0;\n\n    if (!$(this).hasClass('bg-secondary')) {\n      $(this).toggleClass('active');\n      sheet = $('.iq-booking-screen').find('.iq-seat.active').length;\n      $('.iq-film-block').find('span').text(sheet);\n    }\n  });\n  $(document).on('click', '.ri-close-circle-line', function () {\n    $(this).parent().parent().parent().parent().removeClass('film-side');\n  });\n  $(document).on('click', '.iq-film-block', function () {\n    if (parseInt($(this).find('span').text()) > 0) {\n      $('.iq-sidebar-right-menu').addClass('film-side');\n    }\n  });\n};\n\nconst homeChartOne = () => {\n  if ($('#home-chart-01').length) {\n    let options = {\n      series: [{\n        name: \"Desktops\",\n        data: [5, 10, 8, 15]\n      }],\n      chart: {\n        height: 150,\n        type: 'line',\n        foreColor: '#8c91b6',\n        zoom: {\n          enabled: false\n        }\n      },\n      colors: [\"#827af3\"],\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      grid: {\n        row: {\n          colors: [\"#f3f3f3\", \"transparent\"],\n          opacity: 0.5\n        }\n      },\n      xaxis: {\n        categories: ['Jan', 'Feb', 'Mar', 'Apr']\n      }\n    };\n    var chart = new ApexCharts(document.querySelector(\"#home-chart-01\"), options);\n    chart.render();\n  }\n};\n\nconst homeChartTwo = () => {\n  if ($('#home-chart-02').length) {\n    var options = {\n      series: [{\n        name: 'Net Profit',\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\n      }, {\n        name: 'Revenue',\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\n      }],\n      chart: {\n        type: 'bar',\n        foreColor: '#8c91b6',\n        height: 350\n      },\n      colors: ['#827af3', '#6ce6f4'],\n      plotOptions: {\n        bar: {\n          horizontal: false,\n          columnWidth: '55%',\n          endingShape: 'rounded'\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        show: true,\n        width: 2,\n        colors: ['transparent']\n      },\n      xaxis: {\n        categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct']\n      },\n      yaxis: {},\n      fill: {\n        opacity: 1\n      },\n      tooltip: {\n        y: {\n          formatter: function (val) {\n            return \"$ \" + val + \" thousands\";\n          }\n        }\n      }\n    };\n    var chart = new ApexCharts(document.querySelector(\"#home-chart-02\"), options);\n    chart.render();\n  }\n};\n\nconst homeChartFive = () => {\n  if ($('#home-chart-05').length) {\n    var _s = $RefreshSig$();\n\n    am4core.ready(_s(function () {\n      _s();\n\n      am4core.useTheme(am4themes_animated);\n      var chart = am4core.create(\"home-chart-05\", am4charts.XYChart);\n      chart.colors.list = [am4core.color(\"#827af3\")]; // chart.stroke = am4core.color(\"#8c91b6\");\n\n      var data = [];\n      var value = 120;\n      var names = [\"ra\", \"De\", \"Ca\", \"Ja\", \"Ri\", \"An\"];\n\n      for (var i = 0; i < names.length; i++) {\n        value += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);\n        data.push({\n          category: names[i],\n          value: value\n        });\n      }\n\n      chart.data = data;\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.dataFields.category = \"category\";\n      categoryAxis.renderer.minGridDistance = 15;\n      categoryAxis.renderer.grid.template.location = 0.5;\n      categoryAxis.renderer.grid.template.strokeDasharray = \"1,3\";\n      categoryAxis.renderer.labels.template.rotation = -90;\n      categoryAxis.renderer.labels.template.horizontalCenter = \"left\";\n      categoryAxis.renderer.labels.template.location = 0.5;\n      categoryAxis.renderer.labels.template.adapter.add(\"dx\", function (dx, target) {\n        return -target.maxRight / 2;\n      });\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.tooltip.disabled = true;\n      valueAxis.renderer.ticks.template.disabled = true;\n      valueAxis.renderer.axisFills.template.disabled = true;\n      var series = chart.series.push(new am4charts.ColumnSeries());\n      series.dataFields.categoryX = \"category\";\n      series.dataFields.valueY = \"value\";\n      series.tooltipText = \"{valueY.value}\";\n      series.sequencedInterpolation = true;\n      series.fillOpacity = 0;\n      series.strokeOpacity = 1;\n      series.strokeDashArray = \"1,3\";\n      series.columns.template.width = 0.01;\n      series.tooltip.pointerOrientation = \"horizontal\";\n      series.bullets.create(am4charts.CircleBullet);\n      chart.cursor = new am4charts.XYCursor();\n    }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n      return [am4core.useTheme];\n    })); // end am4core.ready()\n  }\n};\n\nconst homeChartThree = () => {\n  if ($('#home-chart-03').length) {\n    var options = {\n      series: [44, 55, 13, 33],\n      chart: {\n        width: 380,\n        height: 180,\n        type: 'donut',\n        foreColor: '#8c91b6'\n      },\n      dataLabels: {\n        enabled: false\n      },\n      colors: ['#827af3', '#6ce6f4', '#a09e9e', '#fbc647'],\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          chart: {\n            width: 200\n          },\n          legend: {\n            show: false\n          }\n        }\n      }],\n      legend: {\n        position: 'right',\n        offsetY: 0,\n        height: 150\n      }\n    };\n    var chart = new ApexCharts(document.querySelector(\"#home-chart-03\"), options);\n    chart.render();\n  }\n};\n\nconst homeChartSix = () => {\n  if ($('#home-chart-06').length) {\n    var _s2 = $RefreshSig$();\n\n    am4core.ready(_s2(function () {\n      _s2();\n\n      // Themes begin\n      am4core.useTheme(am4themes_animated); // Themes end\n\n      var chart = am4core.create(\"home-chart-06\", am4charts.XYChart);\n      chart.colors.list = [am4core.color(\"#827af3\"), am4core.color(\"#6ce6f4\")];\n      var data = [];\n      var open = 100;\n      var close = 120;\n      var names = [\"Rai\", \"Dem\", \"Caro\", \"Jac\", \"Rich\", \"Ano\", \"Amd\", \"Idal\", \"Joi\", \"Mar\", \"Cur\", \"Shl\", \"Meg\"];\n\n      for (var i = 0; i < names.length; i++) {\n        open += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);\n        close = open + Math.round(Math.random() * 10) + 3;\n        data.push({\n          category: names[i],\n          open: open,\n          close: close\n        });\n      }\n\n      chart.data = data;\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.dataFields.category = \"category\";\n      categoryAxis.renderer.minGridDistance = 15;\n      categoryAxis.renderer.grid.template.location = 0.5;\n      categoryAxis.renderer.grid.template.strokeDasharray = \"1,3\";\n      categoryAxis.renderer.labels.template.rotation = -90;\n      categoryAxis.renderer.labels.template.horizontalCenter = \"left\";\n      categoryAxis.renderer.labels.template.location = 0.5;\n      categoryAxis.renderer.inside = true;\n      categoryAxis.renderer.labels.template.adapter.add(\"dx\", function (dx, target) {\n        return -target.maxRight / 2;\n      });\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.tooltip.disabled = true;\n      valueAxis.renderer.ticks.template.disabled = true;\n      valueAxis.renderer.axisFills.template.disabled = true;\n      var series = chart.series.push(new am4charts.ColumnSeries());\n      series.dataFields.categoryX = \"category\";\n      series.dataFields.openValueY = \"open\";\n      series.dataFields.valueY = \"close\";\n      series.tooltipText = \"open: {openValueY.value} close: {valueY.value}\";\n      series.sequencedInterpolation = true;\n      series.fillOpacity = 0;\n      series.strokeOpacity = 1;\n      series.columns.template.width = 0.01;\n      series.tooltip.pointerOrientation = \"horizontal\";\n      var openBullet = series.bullets.create(am4charts.CircleBullet);\n      openBullet.locationY = 1;\n      var closeBullet = series.bullets.create(am4charts.CircleBullet);\n      closeBullet.fill = chart.colors.getIndex(4);\n      closeBullet.stroke = closeBullet.fill;\n      chart.cursor = new am4charts.XYCursor();\n    }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n      return [am4core.useTheme];\n    })); // end am4core.ready()\n  }\n};\n\nconst todoList = () => {\n  $(document).ready(function () {\n    $().on('click', '.todo-task-lists li', function () {\n      if ($(this).find('input:checkbox[name=todo-check]').is(\":checked\")) {\n        $(this).find('input:checkbox[name=todo-check]').attr(\"checked\", false);\n        $(this).removeClass('active-task');\n      } else {\n        $(this).find('input:checkbox[name=todo-check]').attr(\"checked\", true);\n        $(this).addClass('active-task');\n      } // jQuery(this).addClass('active-task');\n\n    });\n  });\n};\n\nconst todo = () => {\n  $(document).on('click', '.todo-task-list > li > a', function () {\n    $('.todo-task-list li').removeClass('active');\n    $('.todo-task-list .sub-task').removeClass('show');\n    $(this).parent().toggleClass('active');\n    $(this).next().toggleClass('show');\n  });\n  $(document).on('click', '.todo-task-list > li li > a', function () {\n    $('.todo-task-list li li').removeClass('active');\n    $(this).parent().toggleClass('active');\n  });\n};\n\nconst chartHome1 = () => {\n  if ($('#chartdiv').length) {\n    $(document).ready(function () {\n      var _s3 = $RefreshSig$();\n\n      am4core.ready(_s3(function () {\n        _s3();\n\n        // Themes begin\n        am4core.useTheme(am4themes_animated); // Themes end\n        // Define country data\n\n        var countries = {\n          \"AD\": {\n            \"country\": \"Andorra\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"andorraLow\", \"andorraHigh\"]\n          },\n          \"AE\": {\n            \"country\": \"United Arab Emirates\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"uaeLow\", \"uaeHigh\"]\n          },\n          \"AF\": {\n            \"country\": \"Afghanistan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"AG\": {\n            \"country\": \"Antigua and Barbuda\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"antiguaBarbudaLow\", \"antiguaBarbudaHigh\"]\n          },\n          \"AI\": {\n            \"country\": \"Anguilla\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"anguillaLow\", \"anguillaHigh\"]\n          },\n          \"AL\": {\n            \"country\": \"Albania\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"albaniaLow\", \"albaniaHigh\"]\n          },\n          \"AM\": {\n            \"country\": \"Armenia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"armeniaLow\", \"armeniaHigh\"]\n          },\n          \"AO\": {\n            \"country\": \"Angola\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"angolaLow\", \"angolaHigh\"]\n          },\n          \"AQ\": {\n            \"country\": \"Antarctica\",\n            \"continent_code\": \"AN\",\n            \"continent\": \"Antarctica\",\n            \"maps\": []\n          },\n          \"AR\": {\n            \"country\": \"Argentina\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"argentinaLow\", \"argentinaHigh\"]\n          },\n          \"AS\": {\n            \"country\": \"American Samoa\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": [\"americanSamoaLow\", \"americanSamoaHigh\"]\n          },\n          \"AT\": {\n            \"country\": \"Austria\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"austriaLow\", \"austriaHigh\"]\n          },\n          \"AU\": {\n            \"country\": \"Australia\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": [\"australiaLow\", \"australiaHigh\"]\n          },\n          \"AW\": {\n            \"country\": \"Aruba\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"arubaLow\", \"arubaHigh\"]\n          },\n          \"AX\": {\n            \"country\": \"Aland Islands\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"AZ\": {\n            \"country\": \"Azerbaijan\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"azerbaijanLow\", \"azerbaijanHigh\"]\n          },\n          \"BA\": {\n            \"country\": \"Bosnia and Herzegovina\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"bosniaHerzegovinaLow\", \"bosniaHerzegovinaHigh\", \"bosniaHerzegovinaCantonsLow\", \"bosniaHerzegovinaCantonsHigh\"]\n          },\n          \"BB\": {\n            \"country\": \"Barbados\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"barbadosLow\", \"barbadosHigh\"]\n          },\n          \"BD\": {\n            \"country\": \"Bangladesh\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"bangladeshLow\", \"bangladeshHigh\"]\n          },\n          \"BE\": {\n            \"country\": \"Belgium\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"belgiumLow\", \"belgiumHigh\"]\n          },\n          \"BF\": {\n            \"country\": \"Burkina Faso\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"burkinaFasoLow\", \"burkinaFasoHigh\"]\n          },\n          \"BG\": {\n            \"country\": \"Bulgaria\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"bulgariaLow\", \"bulgariaHigh\"]\n          },\n          \"BH\": {\n            \"country\": \"Bahrain\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"bahrainLow\", \"bahrainHigh\"]\n          },\n          \"BI\": {\n            \"country\": \"Burundi\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"burundiLow\", \"burundiHigh\"]\n          },\n          \"BJ\": {\n            \"country\": \"Benin\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"beninLow\", \"beninHigh\"]\n          },\n          \"BL\": {\n            \"country\": \"Saint Barthelemy\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"BM\": {\n            \"country\": \"Bermuda\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"bermudaLow\", \"bermudaHigh\"]\n          },\n          \"BN\": {\n            \"country\": \"Brunei Darussalam\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"bruneiDarussalamLow\", \"bruneiDarussalamHigh\"]\n          },\n          \"BO\": {\n            \"country\": \"Bolivia, Plurinational State of\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"boliviaLow\", \"boliviaHigh\"]\n          },\n          \"BQ\": {\n            \"country\": \"Bonaire, Sint Eustatius and Saba\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"bonaireSintEustatiusSabaLow\", \"bonaireSintEustatiusSabaHigh\"]\n          },\n          \"BR\": {\n            \"country\": \"Brazil\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"brazilLow\", \"brazilHigh\"]\n          },\n          \"BS\": {\n            \"country\": \"Bahamas\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"BT\": {\n            \"country\": \"Bhutan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"bhutanLow\", \"bhutanHigh\"]\n          },\n          \"BV\": {\n            \"country\": \"Bouvet Island\",\n            \"continent_code\": \"AN\",\n            \"continent\": \"Antarctica\",\n            \"maps\": []\n          },\n          \"BW\": {\n            \"country\": \"Botswana\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"botswanaLow\", \"botswanaHigh\"]\n          },\n          \"BY\": {\n            \"country\": \"Belarus\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"belarusLow\", \"belarusHigh\"]\n          },\n          \"BZ\": {\n            \"country\": \"Belize\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"belizeLow\", \"belizeHigh\"]\n          },\n          \"CA\": {\n            \"country\": \"Canada\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"canadaLow\", \"canadaHigh\"]\n          },\n          \"CC\": {\n            \"country\": \"Cocos (Keeling) Islands\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"CD\": {\n            \"country\": \"Congo, the Democratic Republic of the\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"congoDRLow\", \"congoDRHigh\"]\n          },\n          \"CF\": {\n            \"country\": \"Central African Republic\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"centralAfricanRepublicLow\", \"centralAfricanRepublicHigh\"]\n          },\n          \"CG\": {\n            \"country\": \"Congo\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"congoLow\", \"congoHigh\"]\n          },\n          \"CH\": {\n            \"country\": \"Switzerland\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"switzerlandLow\", \"switzerlandHigh\"]\n          },\n          \"CI\": {\n            \"country\": \"Cote d'Ivoire\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"CK\": {\n            \"country\": \"Cook Islands\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"CL\": {\n            \"country\": \"Chile\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"chileLow\", \"chileHigh\"]\n          },\n          \"CM\": {\n            \"country\": \"Cameroon\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"cameroonLow\", \"cameroonHigh\"]\n          },\n          \"CN\": {\n            \"country\": \"China\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"chinaLow\", \"chinaHigh\"]\n          },\n          \"CO\": {\n            \"country\": \"Colombia\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"colombiaLow\", \"colombiaHigh\", \"colombiaMuniLow\", \"colombiaMuniHigh\"]\n          },\n          \"CR\": {\n            \"country\": \"Costa Rica\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"costaRicaLow\", \"costaRicaHigh\"]\n          },\n          \"CU\": {\n            \"country\": \"Cuba\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"CV\": {\n            \"country\": \"Cape Verde\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"capeVerdeLow\", \"capeVerdeHigh\"]\n          },\n          \"CW\": {\n            \"country\": \"Curacao\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"curacaoLow\", \"curacaoHigh\"]\n          },\n          \"CX\": {\n            \"country\": \"Christmas Island\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"CY\": {\n            \"country\": \"Cyprus\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"cyprusLow\", \"cyprusHigh\", \"cyprusNorthCyprusLow\", \"cyprusNorthCyprusHigh\"]\n          },\n          \"CZ\": {\n            \"country\": \"Czech Republic\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"czechiaLow\", \"czechiaHigh\"]\n          },\n          \"DE\": {\n            \"country\": \"Germany\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"germanyLow\", \"germanyHigh\"]\n          },\n          \"DJ\": {\n            \"country\": \"Djibouti\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"djiboutiLow\", \"djiboutiHigh\"]\n          },\n          \"DK\": {\n            \"country\": \"Denmark\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"denmarkLow\", \"denmarkHigh\"]\n          },\n          \"DM\": {\n            \"country\": \"Dominica\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"dominicaLow\", \"dominicaHigh\"]\n          },\n          \"DO\": {\n            \"country\": \"Dominican Republic\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"dominicanRepublicLow\", \"dominicanRepublicHigh\", \"dominicanRepublicMuniLow\", \"dominicanRepublicMuniHigh\"]\n          },\n          \"DZ\": {\n            \"country\": \"Algeria\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"algeriaLow\", \"algeriaHigh\"]\n          },\n          \"EC\": {\n            \"country\": \"Ecuador\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"ecuadorLow\", \"ecuadorHigh\"]\n          },\n          \"EE\": {\n            \"country\": \"Estonia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"estoniaLow\", \"estoniaHigh\"]\n          },\n          \"EG\": {\n            \"country\": \"Egypt\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"egyptLow\", \"egyptHigh\"]\n          },\n          \"EH\": {\n            \"country\": \"Western Sahara\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"ER\": {\n            \"country\": \"Eritrea\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"ES\": {\n            \"country\": \"Spain\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"spainLow\", \"spainHigh\", \"spainProvincesLow\", \"spainProvincesHigh\"]\n          },\n          \"ET\": {\n            \"country\": \"Ethiopia\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"FI\": {\n            \"country\": \"Finland\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"finlandLow\", \"finlandHigh\"]\n          },\n          \"FJ\": {\n            \"country\": \"Fiji\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": [\"fijiEastLow\", \"fijiEastHigh\", \"fijiWestLow\", \"fijiWestHigh\"]\n          },\n          \"FK\": {\n            \"country\": \"Falkland Islands (Malvinas)\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": []\n          },\n          \"FM\": {\n            \"country\": \"Micronesia, Federated States of\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"FO\": {\n            \"country\": \"Faroe Islands\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"faroeIslandsLow\", \"faroeIslandsHigh\"]\n          },\n          \"FR\": {\n            \"country\": \"France\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"franceLow\", \"franceHigh\", \"franceDepartmentsLow\", \"franceDepartmentsHigh\"]\n          },\n          \"GA\": {\n            \"country\": \"Gabon\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"gabonLow\", \"gabonHigh\"]\n          },\n          \"GB\": {\n            \"country\": \"United Kingdom\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"ukLow\", \"ukHigh\", \"ukCountiesLow\", \"ukCountiesHigh\"]\n          },\n          \"GB-CHA\": {\n            \"country\": \"Channel Islands\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"channelIslandsLow\", \"channelIslandsHigh\"]\n          },\n          \"GD\": {\n            \"country\": \"Grenada\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"GE\": {\n            \"country\": \"Georgia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"georgiaLow\", \"georgiaHigh\", \"georgiaSouthOssetiaLow\", \"georgiaSouthOssetiaHigh\"]\n          },\n          \"GF\": {\n            \"country\": \"French Guiana\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"frenchGuianaLow\", \"frenchGuianaHigh\"]\n          },\n          \"GG\": {\n            \"country\": \"Guernsey\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"GH\": {\n            \"country\": \"Ghana\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"GI\": {\n            \"country\": \"Gibraltar\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"GL\": {\n            \"country\": \"Greenland\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"greenlandLow\", \"greenlandHigh\"]\n          },\n          \"GM\": {\n            \"country\": \"Gambia\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"GN\": {\n            \"country\": \"Guinea\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"guineaLow\", \"guineaHigh\"]\n          },\n          \"GP\": {\n            \"country\": \"Guadeloupe\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"GQ\": {\n            \"country\": \"Equatorial Guinea\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"equatorialGuineaLow\", \"equatorialGuineaHigh\"]\n          },\n          \"GR\": {\n            \"country\": \"Greece\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"greeceLow\", \"greeceHigh\"]\n          },\n          \"GS\": {\n            \"country\": \"South Georgia and the South Sandwich Islands\",\n            \"continent_code\": \"AN\",\n            \"continent\": \"Antarctica\",\n            \"maps\": []\n          },\n          \"GT\": {\n            \"country\": \"Guatemala\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"GU\": {\n            \"country\": \"Guam\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"GW\": {\n            \"country\": \"Guinea-Bissau\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"GY\": {\n            \"country\": \"Guyana\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": []\n          },\n          \"HK\": {\n            \"country\": \"Hong Kong\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"hongKongLow\", \"hongKongHigh\"]\n          },\n          \"HM\": {\n            \"country\": \"Heard Island and McDonald Islands\",\n            \"continent_code\": \"AN\",\n            \"continent\": \"Antarctica\",\n            \"maps\": []\n          },\n          \"HN\": {\n            \"country\": \"Honduras\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"hondurasLow\", \"hondurasHigh\"]\n          },\n          \"HR\": {\n            \"country\": \"Croatia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"croatiaLow\", \"croatiaHigh\"]\n          },\n          \"HT\": {\n            \"country\": \"Haiti\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"HU\": {\n            \"country\": \"Hungary\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"hungaryLow\", \"hungaryHigh\"]\n          },\n          \"ID\": {\n            \"country\": \"Indonesia\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"indonesiaLow\", \"indonesiaHigh\"]\n          },\n          \"IE\": {\n            \"country\": \"Ireland\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"irelandLow\", \"irelandHigh\"]\n          },\n          \"IL\": {\n            \"country\": \"Israel\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"israelLow\", \"israelHigh\", \"israelPalestineLow\", \"israelPalestineHigh\"]\n          },\n          \"IM\": {\n            \"country\": \"Isle of Man\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"IN\": {\n            \"country\": \"India\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"indiaLow\", \"indiaHigh\"]\n          },\n          \"IO\": {\n            \"country\": \"British Indian Ocean Territory\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"IQ\": {\n            \"country\": \"Iraq\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"IR\": {\n            \"country\": \"Iran, Islamic Republic of\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"IS\": {\n            \"country\": \"Iceland\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"icelandLow\", \"icelandHigh\"]\n          },\n          \"IT\": {\n            \"country\": \"Italy\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"italyLow\", \"italyHigh\"]\n          },\n          \"JE\": {\n            \"country\": \"Jersey\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"JM\": {\n            \"country\": \"Jamaica\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"JO\": {\n            \"country\": \"Jordan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"JP\": {\n            \"country\": \"Japan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"japanLow\", \"japanHigh\"]\n          },\n          \"KE\": {\n            \"country\": \"Kenya\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"kenyaLow\", \"kenyaHigh\"]\n          },\n          \"KG\": {\n            \"country\": \"Kyrgyzstan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"kyrgyzstanLow\", \"kyrgyzstanHigh\"]\n          },\n          \"KH\": {\n            \"country\": \"Cambodia\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"cambodiaLow\", \"cambodiaHigh\"]\n          },\n          \"KI\": {\n            \"country\": \"Kiribati\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"KM\": {\n            \"country\": \"Comoros\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"KN\": {\n            \"country\": \"Saint Kitts and Nevis\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"KP\": {\n            \"country\": \"Korea, Democratic People's Republic of\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"northKoreaLow\", \"northKoreaHigh\"]\n          },\n          \"KR\": {\n            \"country\": \"Korea, Republic of\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"southKoreaLow\", \"southKoreaHigh\"]\n          },\n          \"KT\": {\n            \"country\": \"Saint Kitts and Nevis\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"stKittsNevisLow\", \"stKittsNevisHigh\"]\n          },\n          \"KW\": {\n            \"country\": \"Kuwait\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"KY\": {\n            \"country\": \"Cayman Islands\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"KZ\": {\n            \"country\": \"Kazakhstan\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"kazakhstanLow\", \"kazakhstanHigh\"]\n          },\n          \"LA\": {\n            \"country\": \"Lao People's Democratic Republic\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"LB\": {\n            \"country\": \"Lebanon\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"LC\": {\n            \"country\": \"Saint Lucia\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"saintLuciaLow\", \"saintLuciaHigh\"]\n          },\n          \"LI\": {\n            \"country\": \"Liechtenstein\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"liechtensteinLow\", \"liechtensteinHigh\"]\n          },\n          \"LK\": {\n            \"country\": \"Sri Lanka\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"sriLankaLow\", \"sriLankaHigh\"]\n          },\n          \"LR\": {\n            \"country\": \"Liberia\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"LS\": {\n            \"country\": \"Lesotho\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"LT\": {\n            \"country\": \"Lithuania\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"lithuaniaLow\", \"lithuaniaHigh\"]\n          },\n          \"LU\": {\n            \"country\": \"Luxembourg\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"LV\": {\n            \"country\": \"Latvia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"latviaLow\", \"latviaHigh\"]\n          },\n          \"LY\": {\n            \"country\": \"Libya\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"MA\": {\n            \"country\": \"Morocco\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"moroccoLow\", \"moroccoHigh\"]\n          },\n          \"MC\": {\n            \"country\": \"Monaco\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"MD\": {\n            \"country\": \"Moldova, Republic of\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"moldovaLow\", \"moldovaHigh\"]\n          },\n          \"ME\": {\n            \"country\": \"Montenegro\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"MF\": {\n            \"country\": \"Saint Martin (French Part)\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"MG\": {\n            \"country\": \"Madagascar\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"MH\": {\n            \"country\": \"Marshall Islands\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"MK\": {\n            \"country\": \"North Macedonia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": []\n          },\n          \"ML\": {\n            \"country\": \"Mali\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"maliLow\", \"maliHigh\"]\n          },\n          \"MM\": {\n            \"country\": \"Myanmar\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"MN\": {\n            \"country\": \"Mongolia\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"mongoliaLow\", \"mongoliaHigh\"]\n          },\n          \"MO\": {\n            \"country\": \"Macao\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"MP\": {\n            \"country\": \"Northern Mariana Islands\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"MQ\": {\n            \"country\": \"Martinique\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"MR\": {\n            \"country\": \"Mauritania\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"MS\": {\n            \"country\": \"Montserrat\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"MT\": {\n            \"country\": \"Malta\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"maltaLow\", \"maltaHigh\"]\n          },\n          \"MU\": {\n            \"country\": \"Mauritius\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"MV\": {\n            \"country\": \"Maldives\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"maldivesLow\", \"maldivesHigh\", \"maldivesIslandsLow\", \"maldivesIslandsHigh\"]\n          },\n          \"MW\": {\n            \"country\": \"Malawi\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"MX\": {\n            \"country\": \"Mexico\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"mexicoLow\", \"mexicoHigh\"]\n          },\n          \"MY\": {\n            \"country\": \"Malaysia\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"malaysiaLow\", \"malaysiaHigh\"]\n          },\n          \"MZ\": {\n            \"country\": \"Mozambique\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"NA\": {\n            \"country\": \"Namibia\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"namibiaLow\", \"namibiaHigh\"]\n          },\n          \"NC\": {\n            \"country\": \"New Caledonia\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"NE\": {\n            \"country\": \"Niger\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"NF\": {\n            \"country\": \"Norfolk Island\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"NG\": {\n            \"country\": \"Nigeria\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"nigeriaLow\", \"nigeriaHigh\"]\n          },\n          \"NI\": {\n            \"country\": \"Nicaragua\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"nicaraguaLow\", \"nicaraguaHigh\"]\n          },\n          \"NL\": {\n            \"country\": \"Netherlands\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"netherlandsLow\", \"netherlandsHigh\"]\n          },\n          \"NO\": {\n            \"country\": \"Norway\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"norwayLow\", \"norwayHigh\"]\n          },\n          \"NP\": {\n            \"country\": \"Nepal\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"nepalLow\", \"nepalHigh\"]\n          },\n          \"NR\": {\n            \"country\": \"Nauru\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"NU\": {\n            \"country\": \"Niue\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"NZ\": {\n            \"country\": \"New Zealand\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": [\"newZealandLow\", \"newZealandHigh\"]\n          },\n          \"OM\": {\n            \"country\": \"Oman\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"omanLow\", \"omanHigh\"]\n          },\n          \"PA\": {\n            \"country\": \"Panama\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"panamaLow\", \"panamaHigh\"]\n          },\n          \"PE\": {\n            \"country\": \"Peru\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"peruLow\", \"peruHigh\"]\n          },\n          \"PF\": {\n            \"country\": \"French Polynesia\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"PG\": {\n            \"country\": \"Papua New Guinea\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"PH\": {\n            \"country\": \"Philippines\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"philippinesLow\", \"philippinesHigh\"]\n          },\n          \"PK\": {\n            \"country\": \"Pakistan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"pakistanLow\", \"pakistanHigh\"]\n          },\n          \"PL\": {\n            \"country\": \"Poland\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"polandLow\", \"polandHigh\"]\n          },\n          \"PM\": {\n            \"country\": \"Saint Pierre and Miquelon\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"stPierreMiquelonLow\", \"stPierreMiquelonHigh\"]\n          },\n          \"PN\": {\n            \"country\": \"Pitcairn\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"PR\": {\n            \"country\": \"Puerto Rico\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"puertoRicoLow\", \"puertoRicoHigh\"]\n          },\n          \"PS\": {\n            \"country\": \"Palestinian, State of\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"palestineLow\", \"palestineHigh\"]\n          },\n          \"PT\": {\n            \"country\": \"Portugal\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"portugalLow\", \"portugalHigh\", \"portugalRegionsLow\", \"portugalRegionsHigh\"]\n          },\n          \"PW\": {\n            \"country\": \"Palau\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"PY\": {\n            \"country\": \"Paraguay\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"paraguayLow\", \"paraguayHigh\"]\n          },\n          \"QA\": {\n            \"country\": \"Qatar\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"qatarLow\", \"qatarHigh\"]\n          },\n          \"RE\": {\n            \"country\": \"Reunion\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"RO\": {\n            \"country\": \"Romania\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"romaniaLow\", \"romaniaHigh\"]\n          },\n          \"RS\": {\n            \"country\": \"Serbia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"serbiaLow\", \"serbiaHigh\", \"serbiaNoKosovoLow\", \"serbiaNoKosovoHigh\"]\n          },\n          \"RU\": {\n            \"country\": \"Russian Federation\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"russiaLow\", \"russiaHigh\", \"russiaCrimeaLow\", \"russiaCrimeaHigh\"]\n          },\n          \"RW\": {\n            \"country\": \"Rwanda\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"SA\": {\n            \"country\": \"Saudi Arabia\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"saudiArabiaLow\", \"saudiArabiaHigh\"]\n          },\n          \"SB\": {\n            \"country\": \"Solomon Islands\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": [\"solomonIslandsLow\", \"solomonIslandsHigh\"]\n          },\n          \"SC\": {\n            \"country\": \"Seychelles\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"seychellesLow\", \"seychellesHigh\"]\n          },\n          \"SD\": {\n            \"country\": \"Sudan\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"sudanLow\", \"sudanHigh\"]\n          },\n          \"SE\": {\n            \"country\": \"Sweden\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"swedenLow\", \"swedenHigh\"]\n          },\n          \"SG\": {\n            \"country\": \"Singapore\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"singaporeLow\", \"singaporeHigh\"]\n          },\n          \"SH\": {\n            \"country\": \"Saint Helena, Ascension and Tristan da Cunha\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"saintHelenaLow\", \"saintHelenaHigh\"]\n          },\n          \"SI\": {\n            \"country\": \"Slovenia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"sloveniaLow\", \"sloveniaHigh\", \"sloveniaRegionsLow\", \"sloveniaRegionsHigh\"]\n          },\n          \"SJ\": {\n            \"country\": \"Svalbard and Jan Mayen\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"svalbardLow\", \"svalbardHigh\"]\n          },\n          \"SK\": {\n            \"country\": \"Slovakia\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"slovakiaLow\", \"slovakiaHigh\"]\n          },\n          \"SL\": {\n            \"country\": \"Sierra Leone\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"SM\": {\n            \"country\": \"San Marino\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"sanMarinoLow\", \"sanMarinoHigh\"]\n          },\n          \"SN\": {\n            \"country\": \"Senegal\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"senegalLow\", \"senegalHigh\"]\n          },\n          \"SO\": {\n            \"country\": \"Somalia\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"somaliaLow\", \"somaliaHigh\"]\n          },\n          \"SR\": {\n            \"country\": \"Suriname\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": []\n          },\n          \"SS\": {\n            \"country\": \"South Sudan\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"ST\": {\n            \"country\": \"Sao Tome and Principe\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"saoTomePrincipeLow\", \"saoTomePrincipeHigh\"]\n          },\n          \"SV\": {\n            \"country\": \"El Salvador\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"elSalvadorLow\", \"elSalvadorHigh\"]\n          },\n          \"SX\": {\n            \"country\": \"Sint Maarten (Dutch Part)\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"SY\": {\n            \"country\": \"Syrian Arab Republic\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"syriaLow\", \"syriaHigh\"]\n          },\n          \"SZ\": {\n            \"country\": \"Swaziland\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"eswatiniLow\", \"eswatiniHigh\"]\n          },\n          \"TC\": {\n            \"country\": \"Turks and Caicos Islands\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"TD\": {\n            \"country\": \"Chad\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"chadLow\", \"chadHigh\"]\n          },\n          \"TF\": {\n            \"country\": \"French Southern Territories\",\n            \"continent_code\": \"AN\",\n            \"continent\": \"Antarctica\",\n            \"maps\": []\n          },\n          \"TG\": {\n            \"country\": \"Togo\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"TH\": {\n            \"country\": \"Thailand\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"thailandLow\", \"thailandHigh\"]\n          },\n          \"TJ\": {\n            \"country\": \"Tajikistan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"tajikistanLow\", \"tajikistanHigh\"]\n          },\n          \"TK\": {\n            \"country\": \"Tokelau\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"TL\": {\n            \"country\": \"Timor-Leste\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"TM\": {\n            \"country\": \"Turkmenistan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"TN\": {\n            \"country\": \"Tunisia\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"tunisiaLow\", \"tunisiaHigh\"]\n          },\n          \"TO\": {\n            \"country\": \"Tonga\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"TR\": {\n            \"country\": \"Turkey\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"turkeyLow\", \"turkeyHigh\"]\n          },\n          \"TT\": {\n            \"country\": \"Trinidad and Tobago\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"TV\": {\n            \"country\": \"Tuvalu\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"TW\": {\n            \"country\": \"Taiwan, Province of China\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": []\n          },\n          \"TZ\": {\n            \"country\": \"Tanzania, United Republic of\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"tanzaniaLow\", \"tanzaniaHigh\"]\n          },\n          \"UA\": {\n            \"country\": \"Ukraine\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"ukraineLow\", \"ukraineHigh\"]\n          },\n          \"UG\": {\n            \"country\": \"Uganda\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"UM\": {\n            \"country\": \"United States Minor Outlying Islands\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"US\": {\n            \"country\": \"United States\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"usaLow\", \"usaHigh\", \"usaTerritoriesLow\", \"usaTerritoriesHigh\", \"usaTerritories2Low\", \"usaTerritories2High\"]\n          },\n          \"UY\": {\n            \"country\": \"Uruguay\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": []\n          },\n          \"UZ\": {\n            \"country\": \"Uzbekistan\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"uzbekinstanLow\", \"uzbekinstanHigh\"]\n          },\n          \"VA\": {\n            \"country\": \"Holy See (Vatican City State)\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"vaticanLow\", \"vaticanHigh\"]\n          },\n          \"VC\": {\n            \"country\": \"Saint Vincent and the Grenadines\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": [\"saintVincentLow\", \"saintVincentHigh\"]\n          },\n          \"VE\": {\n            \"country\": \"Venezuela, Bolivarian Republic of\",\n            \"continent_code\": \"SA\",\n            \"continent\": \"South America\",\n            \"maps\": [\"venezuelaLow\", \"venezuelaHigh\"]\n          },\n          \"VG\": {\n            \"country\": \"Virgin Islands, British\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"VI\": {\n            \"country\": \"Virgin Islands, U.S.\",\n            \"continent_code\": \"NA\",\n            \"continent\": \"North America\",\n            \"maps\": []\n          },\n          \"VN\": {\n            \"country\": \"Viet Nam\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"vietnamLow\", \"vietnamHigh\"]\n          },\n          \"VU\": {\n            \"country\": \"Vanuatu\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"WF\": {\n            \"country\": \"Wallis and Futuna\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": []\n          },\n          \"WS\": {\n            \"country\": \"Samoa\",\n            \"continent_code\": \"OC\",\n            \"continent\": \"Oceania\",\n            \"maps\": [\"samoaLow\", \"samoaHigh\"]\n          },\n          \"YE\": {\n            \"country\": \"Yemen\",\n            \"continent_code\": \"AS\",\n            \"continent\": \"Asia\",\n            \"maps\": [\"yemenLow\", \"yemenHigh\"]\n          },\n          \"YT\": {\n            \"country\": \"Mayotte\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": []\n          },\n          \"ZA\": {\n            \"country\": \"South Africa\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"southAfricaLow\", \"southAfricaHigh\"]\n          },\n          \"ZM\": {\n            \"country\": \"Zambia\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"zambiaLow\", \"zambiaHigh\"]\n          },\n          \"ZW\": {\n            \"country\": \"Zimbabwe\",\n            \"continent_code\": \"AF\",\n            \"continent\": \"Africa\",\n            \"maps\": [\"zimbabweLow\", \"zimbabweHigh\"]\n          },\n          \"XK\": {\n            \"country\": \"Kosovo\",\n            \"continent_code\": \"EU\",\n            \"continent\": \"Europe\",\n            \"maps\": [\"kosovoLow\", \"kosovoHigh\"]\n          }\n        };\n        var continents = {\n          \"AF\": 0,\n          \"AN\": 1,\n          \"AS\": 2,\n          \"EU\": 3,\n          \"NA\": 4,\n          \"OC\": 5,\n          \"SA\": 6\n        }; // Create map instance\n\n        var chart = am4core.create(\"chartdiv\", am4maps.MapChart);\n        chart.projection = new am4maps.projections.Miller(); // Create map polygon series for world map\n\n        var worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\n        worldSeries.useGeodata = true;\n        worldSeries.geodata = am4geodata_worldLow;\n        worldSeries.exclude = [\"AQ\"];\n        var worldPolygon = worldSeries.mapPolygons.template;\n        worldPolygon.tooltipText = \"{name}\";\n        worldPolygon.nonScalingStroke = true;\n        worldPolygon.strokeOpacity = 0.5;\n        worldPolygon.fill = am4core.color(\"#eee\");\n        worldPolygon.propertyFields.fill = \"color\";\n        var hs = worldPolygon.states.create(\"hover\");\n        hs.properties.fill = chart.colors.getIndex(9); // Create country specific series (but hide it for now)\n\n        var countrySeries = chart.series.push(new am4maps.MapPolygonSeries());\n        countrySeries.useGeodata = true;\n        countrySeries.hide();\n        countrySeries.geodataSource.events.on(\"done\", function (ev) {\n          worldSeries.hide();\n          countrySeries.show();\n        });\n        var countryPolygon = countrySeries.mapPolygons.template;\n        countryPolygon.tooltipText = \"{name}\";\n        countryPolygon.nonScalingStroke = true;\n        countryPolygon.strokeOpacity = 0.5;\n        countryPolygon.fill = am4core.color(\"#eee\");\n        hs = countryPolygon.states.create(\"hover\");\n        hs.properties.fill = chart.colors.getIndex(9); // Set up click events\n\n        worldPolygon.events.on(\"hit\", function (ev) {\n          ev.target.series.chart.zoomToMapObject(ev.target);\n          var map = ev.target.dataItem.dataContext.map;\n\n          if (map) {\n            ev.target.isHover = false;\n            countrySeries.geodataSource.url = \"https://www.amcharts.com/lib/4/geodata/json/\" + map + \".json\";\n            countrySeries.geodataSource.load();\n          }\n        }); // Set up data for countries\n\n        var data = [];\n\n        for (var id in countries) {\n          if (countries.hasOwnProperty(id)) {\n            var country = countries[id];\n\n            if (country.maps.length) {\n              data.push({\n                id: id,\n                color: chart.colors.getIndex(continents[country.continent_code]),\n                map: country.maps[0]\n              });\n            }\n          }\n        }\n\n        worldSeries.data = data; // Zoom control\n\n        chart.zoomControl = new am4maps.ZoomControl();\n        var homeButton = new am4core.Button();\n        homeButton.events.on(\"hit\", function () {\n          worldSeries.show();\n          countrySeries.hide();\n          chart.goHome();\n        });\n        homeButton.icon = new am4core.Sprite();\n        homeButton.padding(7, 5, 7, 5);\n        homeButton.width = 30;\n        homeButton.icon.path = \"M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8\";\n        homeButton.marginBottom = 10;\n        homeButton.parent = chart.zoomControl;\n        homeButton.insertBefore(chart.zoomControl.plusButton);\n      }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n        return [am4core.useTheme];\n      }));\n    });\n  }\n};\n\nexport { index, dynamicChart, initSelect2, getActiveLink };","map":{"version":3,"sources":["C:/Users/phani.kumar.vankadar/OneDrive - Sofigate Oy/phani/cms/hack/VitoCMS2/src/config/pluginsInit.js"],"names":["$","Scrollbar","ApexCharts","am4core","am4charts","am4maps","am4geodata_worldLow","am4themes_animated","flatpickr","WOW","window","jQuery","Waypoint","require","index","document","unbind","loaderInit","wowInit","countDownInit","counterInit","sideBarToggle","copyCode","scrollbarInit","navigationScripts","fullScreenInit","ticketBookInit","preventWithAtag","initSelect2","inItAccordionScript","homeChartOne","homeChartTwo","homeChartThree","homeChartFive","homeChartSix","todoList","todo","caleder","chartHome1","search","inline","on","next","toggleClass","getActiveLink","item","link","undefined","active","windowPath","location","pathname","windowLength","length","removePreg","slice","children","filter","child","base_path","process","env","PUBLIC_URL","e","preventDefault","select2","tags","fadeOut","delay","hide","addClass","slideDown","is","removeClass","slideUp","element","getElementById","init","querySelector","elem","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","documentElement","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","msRequestFullscreen","cancelFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","find","myTargetElement","target","selector","mainElement","hasClass","parent","elementExist","checkElement","boxClass","animateClass","offset","live","counterUp","time","type","found","elements","getElementsByClassName","each","ele","attr","click","remove","posX","left","posY","top","buttonWidth","width","buttonHeight","height","prepend","x","pageX","y","pageY","css","dynamicChart","lastDate","data","TICKINTERVAL","XAXISRANGE","getDayWiseTimeSeries","baseval","count","yrange","i","Math","floor","random","max","min","push","Date","getTime","options","chart","animations","enabled","easing","dynamicAnimation","speed","toolbar","show","sparkline","group","dataLabels","stroke","curve","series","markers","size","xaxis","range","yaxis","colors","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","legend","text","sheet","parseInt","name","foreColor","zoom","grid","row","opacity","categories","render","plotOptions","bar","horizontal","columnWidth","endingShape","tooltip","formatter","val","ready","useTheme","create","XYChart","list","color","value","names","round","category","categoryAxis","xAxes","CategoryAxis","renderer","template","dataFields","minGridDistance","strokeDasharray","labels","rotation","horizontalCenter","adapter","add","dx","maxRight","valueAxis","yAxes","ValueAxis","disabled","ticks","axisFills","ColumnSeries","categoryX","valueY","tooltipText","sequencedInterpolation","fillOpacity","strokeOpacity","strokeDashArray","columns","pointerOrientation","bullets","CircleBullet","cursor","XYCursor","responsive","breakpoint","position","offsetY","open","close","inside","openValueY","openBullet","locationY","closeBullet","getIndex","countries","continents","MapChart","projection","projections","Miller","worldSeries","MapPolygonSeries","useGeodata","geodata","exclude","worldPolygon","mapPolygons","nonScalingStroke","propertyFields","hs","states","properties","countrySeries","geodataSource","events","ev","countryPolygon","zoomToMapObject","map","dataItem","dataContext","isHover","url","load","id","hasOwnProperty","country","maps","continent_code","zoomControl","ZoomControl","homeButton","Button","goHome","icon","Sprite","padding","path","marginBottom","insertBefore","plusButton"],"mappings":"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","sourcesContent":["/* eslint-disable array-callback-return */\r\nimport $ from 'jquery';\r\nimport Scrollbar from 'smooth-scrollbar';\r\nimport ApexCharts from 'apexcharts';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport flatpickr from \"flatpickr\";\r\nlet WOW;\r\n\r\nif (typeof window !== 'undefined') {\r\n  window.jQuery = $;\r\n  window.$ = $;\r\n  window.Waypoint = require('waypoints/lib/jquery.waypoints.min');\r\n  WOW = require('wowjs');\r\n  require('select2/dist/js/select2.min');\r\n  require('jquery.counterup');\r\n}\r\n\r\nconst index = () => {\r\n  $(document).unbind();\r\n  loaderInit();\r\n  wowInit();\r\n  countDownInit();\r\n  counterInit();\r\n  sideBarToggle();\r\n  copyCode();\r\n  scrollbarInit();\r\n  navigationScripts();\r\n  fullScreenInit();\r\n  ticketBookInit();\r\n  preventWithAtag();\r\n  initSelect2();\r\n  inItAccordionScript();\r\n  homeChartOne();\r\n  homeChartTwo();\r\n  homeChartThree();\r\n  homeChartFive();\r\n  homeChartSix();\r\n  todoList();\r\n  todo();\r\n  caleder();\r\n  chartHome1();\r\n  search();\r\n};\r\nconst caleder = () => {\r\n  flatpickr(\".flatpicker\", {\r\n    inline: true,\r\n  });\r\n}\r\nconst search = () => {\r\n  $(document).on('click', '.searchbox .search-input', function () {\r\n    $(this).next().next().toggleClass('show-data');\r\n  });\r\n\r\n}\r\n\r\nconst getActiveLink = (item) => {\r\n  let link = (item.link === undefined || item.link === '/') ? '' : item.link;\r\n  let active = false;\r\n  let windowPath = window.location.pathname;\r\n  let windowLength = (windowPath.length - 1)\r\n  let removePreg = windowPath[windowLength]\r\n  if (removePreg === '/') {\r\n    windowPath = windowPath.slice(0, windowLength)\r\n  }\r\n\r\n  if (item.children !== undefined) {\r\n    item.children.filter(function (child) {\r\n      let base_path = process.env.PUBLIC_URL + child.link;\r\n      if (base_path === windowPath) {\r\n        active = true;\r\n      }\r\n    });\r\n  } else {\r\n    let base_path = process.env.PUBLIC_URL + link;\r\n    if (base_path === windowPath) {\r\n      active = true\r\n    }\r\n  }\r\n  return active;\r\n\r\n};\r\n\r\n// Function to prevent with A tag...\r\nconst preventWithAtag = () => {\r\n  $(document).on('click', 'a', function (e) {\r\n    e.preventDefault();\r\n  });\r\n};\r\n\r\n// Function to Init select2...\r\nconst initSelect2 = () => {\r\n  $('.select2jsMultiSelect').select2({\r\n    tags: true\r\n  });\r\n};\r\n\r\n// Function for the Loader...\r\nconst loaderInit = () => {\r\n  $('#load').fadeOut();\r\n  $('#loading').delay(1000).fadeOut('slow');\r\n};\r\n\r\n\r\n// Accordion script...\r\nconst inItAccordionScript = () => {\r\n  $('.iq-accordion .iq-accordion-block .accordion-details').hide();\r\n  $('.iq-accordion .iq-accordion-block:first').addClass('accordion-active').children().slideDown('slow');\r\n  $(document).on(\"click\", '.iq-accordion .iq-accordion-block', function () {\r\n    if ($(this).children('div.accordion-details').is(':hidden')) {\r\n      $('.iq-accordion .iq-accordion-block').removeClass('accordion-active').children('div.accordion-details ').slideUp('slow');\r\n      $(this).toggleClass('accordion-active').children('div.accordion-details ').slideDown('slow');\r\n    }\r\n  });\r\n};\r\n\r\nconst scrollbarInit = () => {\r\n\r\n  /*---------------------------------------------------------------------\r\n   Header fixed\r\n   -----------------------------------------------------------------------*/\r\n  let element = document.getElementById('sidebar-scrollbar');\r\n  if (element != null) {\r\n    Scrollbar.init(document.querySelector('#sidebar-scrollbar'));\r\n  }\r\n};\r\n\r\nconst fullScreenInit = () => {\r\n  $(document).on('click', '.iq-full-screen', function () {\r\n    let elem = $(this);\r\n    if (!document.fullscreenElement &&\r\n      !document.mozFullScreenElement && // Mozilla\r\n      !document.webkitFullscreenElement && // Webkit-Browser\r\n      !document.msFullscreenElement) { // MS IE ab version 11\r\n\r\n      if (document.documentElement.requestFullscreen) {\r\n        document.documentElement.requestFullscreen();\r\n      } else if (document.documentElement.mozRequestFullScreen) {\r\n        document.documentElement.mozRequestFullScreen();\r\n      } else if (document.documentElement.webkitRequestFullscreen) {\r\n        document.documentElement.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      } else if (document.documentElement.msRequestFullscreen) {\r\n        document.documentElement.msRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\r\n      }\r\n    } else {\r\n      if (document.cancelFullScreen) {\r\n        document.cancelFullScreen();\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n      } else if (document.webkitCancelFullScreen) {\r\n        document.webkitCancelFullScreen();\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n      }\r\n    }\r\n    elem.find('i').toggleClass('ri-fullscreen-line').toggleClass('ri-fullscreen-exit-line');\r\n  });\r\n};\r\n\r\nconst navigationScripts = () => {\r\n  $(document).on('click', function (e) {\r\n    let myTargetElement = e.target;\r\n    let selector, mainElement;\r\n    if ($(myTargetElement).hasClass('search-toggle') || $(myTargetElement).parent().hasClass('search-toggle') || $(myTargetElement).parent().parent().hasClass('search-toggle')) {\r\n      if ($(myTargetElement).hasClass('search-toggle')) {\r\n        selector = $(myTargetElement).parent();\r\n        mainElement = $(myTargetElement);\r\n      } else if ($(myTargetElement).parent().hasClass('search-toggle')) {\r\n        selector = $(myTargetElement).parent().parent();\r\n        mainElement = $(myTargetElement).parent();\r\n      } else if ($(myTargetElement).parent().parent().hasClass('search-toggle')) {\r\n        selector = $(myTargetElement).parent().parent().parent();\r\n        mainElement = $(myTargetElement).parent().parent();\r\n      }\r\n      if (!mainElement.hasClass('active') && $(\".navbar-list li\").find('.active')) {\r\n        $('.navbar-list li').removeClass('iq-show');\r\n        $('.navbar-list li .search-toggle').removeClass('active');\r\n      }\r\n\r\n      selector.toggleClass('iq-show');\r\n      mainElement.toggleClass('active');\r\n\r\n      e.preventDefault();\r\n    } else if ($(myTargetElement).is('.search-input')) { } else {\r\n      $('.navbar-list li').removeClass('iq-show');\r\n      $('.navbar-list li .search-toggle').removeClass('active');\r\n    }\r\n  });\r\n};\r\n\r\nconst wowInit = () => {\r\n  const elementExist = checkElement('class', 'wow');\r\n\r\n  if (elementExist) {\r\n\r\n    new WOW.WOW({\r\n      boxClass: 'wow',\r\n      animateClass: 'animated',\r\n      offset: 0,\r\n      live: false\r\n    }).init();\r\n  }\r\n};\r\n\r\nconst countDownInit = () => {\r\n  const elementExist = checkElement('class', 'countdown');\r\n\r\n  if (elementExist) {\r\n    /*$(\".countdown\").countdown();*/\r\n  }\r\n};\r\n\r\nconst counterInit = () => {\r\n  const elementExist = checkElement('class', 'counter');\r\n\r\n  if (elementExist) {\r\n    $('.counter').counterUp({\r\n            delay: 10,\r\n            time: 1000\r\n        });\r\n  }\r\n};\r\n\r\nconst checkElement = (type, element) => {\r\n  let found = false;\r\n  let elements;\r\n  // eslint-disable-next-line default-case\r\n  switch (type) {\r\n    case 'class':\r\n      elements = document.getElementsByClassName(element);\r\n\r\n      if (elements !== undefined && elements !== null && elements.length > 0) {\r\n        found = true;\r\n      }\r\n      break;\r\n\r\n    case 'id':\r\n      elements = document.getElementById(element);\r\n\r\n      if (elements !== undefined && elements !== null) {\r\n        found = true;\r\n      }\r\n      break;\r\n  }\r\n\r\n\r\n  return found;\r\n};\r\nconst copyCode = () => {\r\n  /*$(document).on('click','[data-copy=\"true\"]',function (e) {\r\n      let _this = $(this);\r\n      let target = _this.attr('data-copy-target');\r\n      /!* Copy the text inside the text field *!/\r\n      let text = document.querySelector(target).innerText;\r\n      let elem = document.createElement(\"textarea\");\r\n      document.body.appendChild(elem);\r\n      elem.value = text;\r\n      /!* Select the text field *!/\r\n      elem.select();\r\n      elem.setSelectionRange(0, 99999); /!*For mobile devices*!/\r\n      /!* Copy the text inside the text field *!/\r\n      document.execCommand(\"copy\");\r\n      document.body.removeChild(elem);\r\n      tooltipUpdate(_this,'Copied');\r\n      _this.tooltip('show');\r\n      setTimeout(() => {\r\n          tooltipUpdate(_this,'Copy')\r\n      },2000)\r\n  })\r\n\r\n  function tooltipUpdate(_this,text) {\r\n      _this.attr('title',text);\r\n      _this.tooltip('dispose');\r\n      _this.tooltip()\r\n  }*/\r\n};\r\n\r\nconst sideBarToggle = () => {\r\n  // $(document).on('click', '.iq-sidebar-menu > ul > li > a', function () {\r\n  //   var checkElement = $(this).next();\r\n  //   $('.iq-sidebar-menu li').removeClass('active show');\r\n  //   $('.iq-sidebar-menu ul').removeClass('show');\r\n  //   $(this).closest('li').addClass('active');\r\n  //   if ((checkElement.is('ul')) && (checkElement.is(':visible'))) {\r\n  //     $(this).closest('li').removeClass('active show');\r\n  //     checkElement.slideUp('normal');\r\n  //   }\r\n  //   if ((checkElement.is('ul')) && (!checkElement.is(':visible'))) {\r\n  //     $('.iq-sidebar-menu ul ul:visible').slideUp('normal');\r\n  //     checkElement.slideDown('normal').addClass('show');\r\n  //   }\r\n  //   let length = $(this).closest('li').find('ul').children().length;\r\n  //   if (length === 0) {\r\n  //     return true;\r\n  //   } else {\r\n  //     return false;\r\n  //   }\r\n  // });\r\n  $('.iq-sidebar-menu .active').each(function (ele, index) {\r\n    $(this).find('.iq-submenu').addClass('show');\r\n    $(this).next().attr(\"aria-expanded\", \"true\");\r\n  })\r\n  $(\".iq-waves-effect\").click(function (e) {\r\n\r\n    // Remove any old one\r\n    $(\".ripple\").remove();\r\n\r\n    // Setup\r\n    let posX = $(this).offset().left,\r\n      posY = $(this).offset().top,\r\n      buttonWidth = $(this).width(),\r\n      buttonHeight = $(this).height();\r\n\r\n    // Add the element\r\n    $(this).prepend(\"<span class='ripple' />\");\r\n\r\n\r\n    // Make it round!\r\n    if (buttonWidth >= buttonHeight) {\r\n      buttonHeight = buttonWidth;\r\n    } else {\r\n      buttonWidth = buttonHeight;\r\n    }\r\n\r\n    // Get the center of the element\r\n    var x = e.pageX - posX - buttonWidth / 2;\r\n    var y = e.pageY - posY - buttonHeight / 2;\r\n\r\n\r\n    // Add the ripples CSS and start the animation\r\n    $(\".ripple\").css({\r\n      width: buttonWidth,\r\n      height: buttonHeight,\r\n      top: y + 'px',\r\n      left: x + 'px'\r\n    }).addClass(\"rippleEffect\");\r\n  });\r\n\r\n  $(document).on('click', '.wrapper-menu', function () {\r\n    $(this).toggleClass('open');\r\n  });\r\n\r\n  $(document).on('click', \".wrapper-menu\", function () {\r\n    $(\"body\").toggleClass(\"sidebar-main\");\r\n  });\r\n};\r\n\r\nconst dynamicChart = () => {\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  var lastDate = 0;\r\n  var data = [];\r\n  var TICKINTERVAL = 86400000;\r\n  let XAXISRANGE = 777600000;\r\n\r\n  function getDayWiseTimeSeries(baseval, count, yrange) {\r\n    var i = 0;\r\n    while (i < count) {\r\n      var x = baseval;\r\n      var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\r\n\r\n      data.push({\r\n        x,\r\n        y\r\n      });\r\n      lastDate = baseval;\r\n      baseval += TICKINTERVAL;\r\n      i++;\r\n    }\r\n  }\r\n\r\n  getDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {\r\n    min: 10,\r\n    max: 90\r\n  });\r\n\r\n  /*function getNewSeries(baseval, yrange) {\r\n      var newDate = baseval + TICKINTERVAL;\r\n      lastDate = newDate;\r\n      for (var i = 0; i < data.length - 10; i++) {\r\n          data[i].x = newDate - XAXISRANGE - TICKINTERVAL;\r\n          data[i].y = 0;\r\n      }\r\n      data.push({\r\n          x: newDate,\r\n          y: Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min\r\n      })\r\n\r\n  }\r\n\r\n  function resetData() {\r\n      // Alternatively, you can also reset the data at certain intervals to prevent creating a huge series\r\n      data = data.slice(data.length - 10, data.length);\r\n  }*/\r\n\r\n\r\n  let options = {\r\n    chart: {\r\n      height: 150,\r\n      type: 'area',\r\n      animations: {\r\n        enabled: true,\r\n        easing: 'linear',\r\n        dynamicAnimation: {\r\n          speed: 1000\r\n        }\r\n      },\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      sparkline: {\r\n        enabled: true\r\n      },\r\n      group: 'sparklines',\r\n    },\r\n    dataLabels: {\r\n      enabled: false\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 3\r\n    },\r\n    series: [{\r\n      data: data\r\n    }],\r\n    markers: {\r\n      size: 4\r\n    },\r\n    xaxis: {\r\n      type: 'datetime',\r\n      range: XAXISRANGE,\r\n    },\r\n    yaxis: {\r\n      max: 100\r\n    },\r\n    colors: ['#0084ff'],\r\n    fill: {\r\n      type: 'gradient',\r\n      gradient: {\r\n        shadeIntensity: 1,\r\n        inverseColors: false,\r\n        opacityFrom: 0.5,\r\n        opacityTo: 0,\r\n        stops: [0, 90, 100]\r\n      },\r\n    },\r\n    legend: {\r\n      show: false\r\n    },\r\n  };\r\n\r\n  return options;\r\n};\r\n\r\nconst ticketBookInit = () => {\r\n  $('.iq-film-block').find('span').text(0);\r\n  $(document).on('click', '.iq-booking-screen .iq-booking-no .list-inline-item .iq-seat ', function (e) {\r\n    e.preventDefault();\r\n    let sheet = 0;\r\n    if (!$(this).hasClass('bg-secondary')) {\r\n      $(this).toggleClass('active');\r\n      sheet = $('.iq-booking-screen').find('.iq-seat.active').length;\r\n      $('.iq-film-block').find('span').text(sheet);\r\n    }\r\n  });\r\n  $(document).on('click', '.ri-close-circle-line', function () {\r\n    $(this).parent().parent().parent().parent().removeClass('film-side');\r\n  });\r\n\r\n  $(document).on('click', '.iq-film-block', function () {\r\n    if (parseInt($(this).find('span').text()) > 0) {\r\n      $('.iq-sidebar-right-menu').addClass('film-side');\r\n    }\r\n  });\r\n};\r\nconst homeChartOne = () => {\r\n  if ($('#home-chart-01').length) {\r\n    let options = {\r\n      series: [{\r\n        name: \"Desktops\",\r\n        data: [5, 10, 8, 15]\r\n      }],\r\n      chart: {\r\n        height: 150,\r\n        type: 'line',\r\n        foreColor: '#8c91b6',\r\n        zoom: {\r\n          enabled: false\r\n        }\r\n      },\r\n      colors: [\"#827af3\"],\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        curve: 'straight'\r\n      },\r\n      grid: {\r\n        row: {\r\n          colors: [\"#f3f3f3\", \"transparent\"],\r\n          opacity: 0.5\r\n        },\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'Feb', 'Mar', 'Apr'],\r\n      }\r\n    };\r\n\r\n    var chart = new ApexCharts(document.querySelector(\"#home-chart-01\"), options);\r\n    chart.render();\r\n  }\r\n}\r\nconst homeChartTwo = () => {\r\n  if ($('#home-chart-02').length) {\r\n    var options = {\r\n      series: [{\r\n        name: 'Net Profit',\r\n        data: [44, 55, 57, 56, 61, 58, 63, 60, 66]\r\n      }, {\r\n        name: 'Revenue',\r\n        data: [76, 85, 101, 98, 87, 105, 91, 114, 94]\r\n      }],\r\n      chart: {\r\n        type: 'bar',\r\n        foreColor: '#8c91b6',\r\n        height: 350\r\n      },\r\n      colors: ['#827af3', '#6ce6f4'],\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: false,\r\n          columnWidth: '55%',\r\n          endingShape: 'rounded'\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: ['transparent']\r\n      },\r\n      xaxis: {\r\n        categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\r\n      },\r\n      yaxis: {\r\n      },\r\n      fill: {\r\n        opacity: 1\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          formatter: function (val) {\r\n            return \"$ \" + val + \" thousands\"\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    var chart = new ApexCharts(document.querySelector(\"#home-chart-02\"), options);\r\n    chart.render();\r\n  }\r\n}\r\nconst homeChartFive = () => {\r\n  if ($('#home-chart-05').length) {\r\n    am4core.ready(function () {\r\n\r\n      am4core.useTheme(am4themes_animated);\r\n\r\n      var chart = am4core.create(\"home-chart-05\", am4charts.XYChart);\r\n      chart.colors.list = [am4core.color(\"#827af3\"),];\r\n      // chart.stroke = am4core.color(\"#8c91b6\");\r\n\r\n      var data = [];\r\n      var value = 120;\r\n\r\n      var names = [\"ra\",\r\n        \"De\",\r\n        \"Ca\",\r\n        \"Ja\",\r\n        \"Ri\",\r\n        \"An\",\r\n      ];\r\n\r\n      for (var i = 0; i < names.length; i++) {\r\n        value += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);\r\n        data.push({ category: names[i], value: value });\r\n      }\r\n\r\n      chart.data = data;\r\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.dataFields.category = \"category\";\r\n      categoryAxis.renderer.minGridDistance = 15;\r\n      categoryAxis.renderer.grid.template.location = 0.5;\r\n      categoryAxis.renderer.grid.template.strokeDasharray = \"1,3\";\r\n      categoryAxis.renderer.labels.template.rotation = -90;\r\n      categoryAxis.renderer.labels.template.horizontalCenter = \"left\";\r\n      categoryAxis.renderer.labels.template.location = 0.5;\r\n\r\n      categoryAxis.renderer.labels.template.adapter.add(\"dx\", function (dx, target) {\r\n        return -target.maxRight / 2;\r\n      })\r\n\r\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      valueAxis.tooltip.disabled = true;\r\n      valueAxis.renderer.ticks.template.disabled = true;\r\n      valueAxis.renderer.axisFills.template.disabled = true;\r\n\r\n      var series = chart.series.push(new am4charts.ColumnSeries());\r\n      series.dataFields.categoryX = \"category\";\r\n      series.dataFields.valueY = \"value\";\r\n      series.tooltipText = \"{valueY.value}\";\r\n      series.sequencedInterpolation = true;\r\n      series.fillOpacity = 0;\r\n      series.strokeOpacity = 1;\r\n      series.strokeDashArray = \"1,3\";\r\n      series.columns.template.width = 0.01;\r\n      series.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n      series.bullets.create(am4charts.CircleBullet);\r\n\r\n      chart.cursor = new am4charts.XYCursor();\r\n\r\n\r\n\r\n\r\n    }); // end am4core.ready()\r\n  }\r\n}\r\n\r\nconst homeChartThree = () => {\r\n  if ($('#home-chart-03').length) {\r\n    var options = {\r\n      series: [44, 55, 13, 33],\r\n      chart: {\r\n        width: 380,\r\n        height: 180,\r\n        type: 'donut',\r\n        foreColor: '#8c91b6',\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      colors: ['#827af3', '#6ce6f4', '#a09e9e', '#fbc647'],\r\n      responsive: [{\r\n        breakpoint: 480,\r\n        options: {\r\n          chart: {\r\n            width: 200\r\n          },\r\n          legend: {\r\n            show: false\r\n          }\r\n        }\r\n      }],\r\n      legend: {\r\n        position: 'right',\r\n        offsetY: 0,\r\n        height: 150,\r\n      }\r\n    };\r\n\r\n    var chart = new ApexCharts(document.querySelector(\"#home-chart-03\"), options);\r\n    chart.render();\r\n\r\n  }\r\n}\r\nconst homeChartSix = () => {\r\n  if ($('#home-chart-06').length) {\r\n    am4core.ready(function () {\r\n\r\n      // Themes begin\r\n      am4core.useTheme(am4themes_animated);\r\n      // Themes end\r\n\r\n      var chart = am4core.create(\"home-chart-06\", am4charts.XYChart);\r\n      chart.colors.list = [am4core.color(\"#827af3\"), am4core.color(\"#6ce6f4\")];\r\n\r\n      var data = [];\r\n      var open = 100;\r\n      var close = 120;\r\n\r\n      var names = [\"Rai\",\r\n        \"Dem\",\r\n        \"Caro\",\r\n        \"Jac\",\r\n        \"Rich\",\r\n        \"Ano\",\r\n        \"Amd\",\r\n        \"Idal\",\r\n        \"Joi\",\r\n        \"Mar\",\r\n        \"Cur\",\r\n        \"Shl\",\r\n        \"Meg\",\r\n      ];\r\n\r\n      for (var i = 0; i < names.length; i++) {\r\n        open += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 5);\r\n        close = open + Math.round(Math.random() * 10) + 3;\r\n        data.push({ category: names[i], open: open, close: close });\r\n      }\r\n\r\n      chart.data = data;\r\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\r\n      categoryAxis.renderer.grid.template.location = 0;\r\n      categoryAxis.dataFields.category = \"category\";\r\n      categoryAxis.renderer.minGridDistance = 15;\r\n      categoryAxis.renderer.grid.template.location = 0.5;\r\n      categoryAxis.renderer.grid.template.strokeDasharray = \"1,3\";\r\n      categoryAxis.renderer.labels.template.rotation = -90;\r\n      categoryAxis.renderer.labels.template.horizontalCenter = \"left\";\r\n      categoryAxis.renderer.labels.template.location = 0.5;\r\n      categoryAxis.renderer.inside = true;\r\n\r\n      categoryAxis.renderer.labels.template.adapter.add(\"dx\", function (dx, target) {\r\n        return -target.maxRight / 2;\r\n      })\r\n\r\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\r\n      valueAxis.tooltip.disabled = true;\r\n      valueAxis.renderer.ticks.template.disabled = true;\r\n      valueAxis.renderer.axisFills.template.disabled = true;\r\n\r\n      var series = chart.series.push(new am4charts.ColumnSeries());\r\n      series.dataFields.categoryX = \"category\";\r\n      series.dataFields.openValueY = \"open\";\r\n      series.dataFields.valueY = \"close\";\r\n      series.tooltipText = \"open: {openValueY.value} close: {valueY.value}\";\r\n      series.sequencedInterpolation = true;\r\n      series.fillOpacity = 0;\r\n      series.strokeOpacity = 1;\r\n      series.columns.template.width = 0.01;\r\n      series.tooltip.pointerOrientation = \"horizontal\";\r\n\r\n      var openBullet = series.bullets.create(am4charts.CircleBullet);\r\n      openBullet.locationY = 1;\r\n\r\n      var closeBullet = series.bullets.create(am4charts.CircleBullet);\r\n\r\n      closeBullet.fill = chart.colors.getIndex(4);\r\n      closeBullet.stroke = closeBullet.fill;\r\n\r\n      chart.cursor = new am4charts.XYCursor();\r\n    }); // end am4core.ready()\r\n  }\r\n}\r\nconst todoList = () => {\r\n  $(document).ready(function () {\r\n    $().on('click', '.todo-task-lists li', function () {\r\n      if ($(this).find('input:checkbox[name=todo-check]').is(\":checked\")) {\r\n\r\n        $(this).find('input:checkbox[name=todo-check]').attr(\"checked\", false);\r\n        $(this).removeClass('active-task');\r\n      } else {\r\n        $(this).find('input:checkbox[name=todo-check]').attr(\"checked\", true);\r\n        $(this).addClass('active-task');\r\n      }\r\n      // jQuery(this).addClass('active-task');\r\n    });\r\n  });\r\n}\r\n\r\nconst todo = () => {\r\n  $(document).on('click', '.todo-task-list > li > a', function () {\r\n    $('.todo-task-list li').removeClass('active');\r\n    $('.todo-task-list .sub-task').removeClass('show');\r\n    $(this).parent().toggleClass('active');\r\n    $(this).next().toggleClass('show');\r\n  });\r\n  $(document).on('click', '.todo-task-list > li li > a', function () {\r\n    $('.todo-task-list li li').removeClass('active');\r\n    $(this).parent().toggleClass('active');\r\n  });\r\n}\r\n\r\nconst chartHome1 = () => {\r\n  if ($('#chartdiv').length) {\r\n    $(document).ready(function () {\r\n      am4core.ready(function () {\r\n        // Themes begin\r\n        am4core.useTheme(am4themes_animated);\r\n        // Themes end\r\n\r\n        // Define country data\r\n        var countries = {\r\n          \"AD\": {\r\n            \"country\": \"Andorra\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"andorraLow\", \"andorraHigh\"]\r\n          },\r\n          \"AE\": {\r\n            \"country\": \"United Arab Emirates\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"uaeLow\", \"uaeHigh\"]\r\n          },\r\n          \"AF\": {\r\n            \"country\": \"Afghanistan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"AG\": {\r\n            \"country\": \"Antigua and Barbuda\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"antiguaBarbudaLow\", \"antiguaBarbudaHigh\"]\r\n          },\r\n          \"AI\": {\r\n            \"country\": \"Anguilla\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"anguillaLow\", \"anguillaHigh\"]\r\n          },\r\n          \"AL\": {\r\n            \"country\": \"Albania\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"albaniaLow\", \"albaniaHigh\"]\r\n          },\r\n          \"AM\": {\r\n            \"country\": \"Armenia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"armeniaLow\", \"armeniaHigh\"]\r\n          },\r\n          \"AO\": {\r\n            \"country\": \"Angola\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"angolaLow\", \"angolaHigh\"]\r\n          },\r\n          \"AQ\": {\r\n            \"country\": \"Antarctica\",\r\n            \"continent_code\": \"AN\",\r\n            \"continent\": \"Antarctica\",\r\n            \"maps\": []\r\n          },\r\n          \"AR\": {\r\n            \"country\": \"Argentina\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"argentinaLow\", \"argentinaHigh\"]\r\n          },\r\n          \"AS\": {\r\n            \"country\": \"American Samoa\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": [\"americanSamoaLow\", \"americanSamoaHigh\"]\r\n          },\r\n          \"AT\": {\r\n            \"country\": \"Austria\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"austriaLow\", \"austriaHigh\"]\r\n          },\r\n          \"AU\": {\r\n            \"country\": \"Australia\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": [\"australiaLow\", \"australiaHigh\"]\r\n          },\r\n          \"AW\": {\r\n            \"country\": \"Aruba\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"arubaLow\", \"arubaHigh\"]\r\n          },\r\n          \"AX\": {\r\n            \"country\": \"Aland Islands\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"AZ\": {\r\n            \"country\": \"Azerbaijan\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"azerbaijanLow\", \"azerbaijanHigh\"]\r\n          },\r\n          \"BA\": {\r\n            \"country\": \"Bosnia and Herzegovina\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"bosniaHerzegovinaLow\", \"bosniaHerzegovinaHigh\", \"bosniaHerzegovinaCantonsLow\", \"bosniaHerzegovinaCantonsHigh\"]\r\n          },\r\n          \"BB\": {\r\n            \"country\": \"Barbados\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"barbadosLow\", \"barbadosHigh\"]\r\n          },\r\n          \"BD\": {\r\n            \"country\": \"Bangladesh\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"bangladeshLow\", \"bangladeshHigh\"]\r\n          },\r\n          \"BE\": {\r\n            \"country\": \"Belgium\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"belgiumLow\", \"belgiumHigh\"]\r\n          },\r\n          \"BF\": {\r\n            \"country\": \"Burkina Faso\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"burkinaFasoLow\", \"burkinaFasoHigh\"]\r\n          },\r\n          \"BG\": {\r\n            \"country\": \"Bulgaria\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"bulgariaLow\", \"bulgariaHigh\"]\r\n          },\r\n          \"BH\": {\r\n            \"country\": \"Bahrain\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"bahrainLow\", \"bahrainHigh\"]\r\n          },\r\n          \"BI\": {\r\n            \"country\": \"Burundi\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"burundiLow\", \"burundiHigh\"]\r\n          },\r\n          \"BJ\": {\r\n            \"country\": \"Benin\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"beninLow\", \"beninHigh\"]\r\n          },\r\n          \"BL\": {\r\n            \"country\": \"Saint Barthelemy\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"BM\": {\r\n            \"country\": \"Bermuda\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"bermudaLow\", \"bermudaHigh\"]\r\n          },\r\n          \"BN\": {\r\n            \"country\": \"Brunei Darussalam\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"bruneiDarussalamLow\", \"bruneiDarussalamHigh\"]\r\n          },\r\n          \"BO\": {\r\n            \"country\": \"Bolivia, Plurinational State of\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"boliviaLow\", \"boliviaHigh\"]\r\n          },\r\n          \"BQ\": {\r\n            \"country\": \"Bonaire, Sint Eustatius and Saba\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"bonaireSintEustatiusSabaLow\", \"bonaireSintEustatiusSabaHigh\"]\r\n          },\r\n          \"BR\": {\r\n            \"country\": \"Brazil\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"brazilLow\", \"brazilHigh\"]\r\n          },\r\n          \"BS\": {\r\n            \"country\": \"Bahamas\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"BT\": {\r\n            \"country\": \"Bhutan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"bhutanLow\", \"bhutanHigh\"]\r\n          },\r\n          \"BV\": {\r\n            \"country\": \"Bouvet Island\",\r\n            \"continent_code\": \"AN\",\r\n            \"continent\": \"Antarctica\",\r\n            \"maps\": []\r\n          },\r\n          \"BW\": {\r\n            \"country\": \"Botswana\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"botswanaLow\", \"botswanaHigh\"]\r\n          },\r\n          \"BY\": {\r\n            \"country\": \"Belarus\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"belarusLow\", \"belarusHigh\"]\r\n          },\r\n          \"BZ\": {\r\n            \"country\": \"Belize\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"belizeLow\", \"belizeHigh\"]\r\n          },\r\n          \"CA\": {\r\n            \"country\": \"Canada\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"canadaLow\", \"canadaHigh\"]\r\n          },\r\n          \"CC\": {\r\n            \"country\": \"Cocos (Keeling) Islands\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"CD\": {\r\n            \"country\": \"Congo, the Democratic Republic of the\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"congoDRLow\", \"congoDRHigh\"]\r\n          },\r\n          \"CF\": {\r\n            \"country\": \"Central African Republic\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"centralAfricanRepublicLow\", \"centralAfricanRepublicHigh\"]\r\n          },\r\n          \"CG\": {\r\n            \"country\": \"Congo\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"congoLow\", \"congoHigh\"]\r\n          },\r\n          \"CH\": {\r\n            \"country\": \"Switzerland\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"switzerlandLow\", \"switzerlandHigh\"]\r\n          },\r\n          \"CI\": {\r\n            \"country\": \"Cote d'Ivoire\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"CK\": {\r\n            \"country\": \"Cook Islands\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"CL\": {\r\n            \"country\": \"Chile\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"chileLow\", \"chileHigh\"]\r\n          },\r\n          \"CM\": {\r\n            \"country\": \"Cameroon\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"cameroonLow\", \"cameroonHigh\"]\r\n          },\r\n          \"CN\": {\r\n            \"country\": \"China\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"chinaLow\", \"chinaHigh\"]\r\n          },\r\n          \"CO\": {\r\n            \"country\": \"Colombia\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"colombiaLow\", \"colombiaHigh\", \"colombiaMuniLow\", \"colombiaMuniHigh\"]\r\n          },\r\n          \"CR\": {\r\n            \"country\": \"Costa Rica\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"costaRicaLow\", \"costaRicaHigh\"]\r\n          },\r\n          \"CU\": {\r\n            \"country\": \"Cuba\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"CV\": {\r\n            \"country\": \"Cape Verde\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"capeVerdeLow\", \"capeVerdeHigh\"]\r\n          },\r\n          \"CW\": {\r\n            \"country\": \"Curacao\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"curacaoLow\", \"curacaoHigh\"]\r\n          },\r\n          \"CX\": {\r\n            \"country\": \"Christmas Island\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"CY\": {\r\n            \"country\": \"Cyprus\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"cyprusLow\", \"cyprusHigh\", \"cyprusNorthCyprusLow\", \"cyprusNorthCyprusHigh\"]\r\n          },\r\n          \"CZ\": {\r\n            \"country\": \"Czech Republic\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"czechiaLow\", \"czechiaHigh\"]\r\n          },\r\n          \"DE\": {\r\n            \"country\": \"Germany\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"germanyLow\", \"germanyHigh\"]\r\n          },\r\n          \"DJ\": {\r\n            \"country\": \"Djibouti\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"djiboutiLow\", \"djiboutiHigh\"]\r\n          },\r\n          \"DK\": {\r\n            \"country\": \"Denmark\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"denmarkLow\", \"denmarkHigh\"]\r\n          },\r\n          \"DM\": {\r\n            \"country\": \"Dominica\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"dominicaLow\", \"dominicaHigh\"]\r\n          },\r\n          \"DO\": {\r\n            \"country\": \"Dominican Republic\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"dominicanRepublicLow\", \"dominicanRepublicHigh\", \"dominicanRepublicMuniLow\", \"dominicanRepublicMuniHigh\"]\r\n          },\r\n          \"DZ\": {\r\n            \"country\": \"Algeria\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"algeriaLow\", \"algeriaHigh\"]\r\n          },\r\n          \"EC\": {\r\n            \"country\": \"Ecuador\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"ecuadorLow\", \"ecuadorHigh\"]\r\n          },\r\n          \"EE\": {\r\n            \"country\": \"Estonia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"estoniaLow\", \"estoniaHigh\"]\r\n          },\r\n          \"EG\": {\r\n            \"country\": \"Egypt\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"egyptLow\", \"egyptHigh\"]\r\n          },\r\n          \"EH\": {\r\n            \"country\": \"Western Sahara\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"ER\": {\r\n            \"country\": \"Eritrea\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"ES\": {\r\n            \"country\": \"Spain\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"spainLow\", \"spainHigh\", \"spainProvincesLow\", \"spainProvincesHigh\"]\r\n          },\r\n          \"ET\": {\r\n            \"country\": \"Ethiopia\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"FI\": {\r\n            \"country\": \"Finland\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"finlandLow\", \"finlandHigh\"]\r\n          },\r\n          \"FJ\": {\r\n            \"country\": \"Fiji\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": [\"fijiEastLow\", \"fijiEastHigh\", \"fijiWestLow\", \"fijiWestHigh\"]\r\n          },\r\n          \"FK\": {\r\n            \"country\": \"Falkland Islands (Malvinas)\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": []\r\n          },\r\n          \"FM\": {\r\n            \"country\": \"Micronesia, Federated States of\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"FO\": {\r\n            \"country\": \"Faroe Islands\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"faroeIslandsLow\", \"faroeIslandsHigh\"]\r\n          },\r\n          \"FR\": {\r\n            \"country\": \"France\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"franceLow\", \"franceHigh\", \"franceDepartmentsLow\", \"franceDepartmentsHigh\"]\r\n          },\r\n          \"GA\": {\r\n            \"country\": \"Gabon\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"gabonLow\", \"gabonHigh\"]\r\n          },\r\n          \"GB\": {\r\n            \"country\": \"United Kingdom\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"ukLow\", \"ukHigh\", \"ukCountiesLow\", \"ukCountiesHigh\"]\r\n          },\r\n          \"GB-CHA\": {\r\n            \"country\": \"Channel Islands\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"channelIslandsLow\", \"channelIslandsHigh\"]\r\n          },\r\n          \"GD\": {\r\n            \"country\": \"Grenada\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"GE\": {\r\n            \"country\": \"Georgia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"georgiaLow\", \"georgiaHigh\", \"georgiaSouthOssetiaLow\", \"georgiaSouthOssetiaHigh\"]\r\n          },\r\n          \"GF\": {\r\n            \"country\": \"French Guiana\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"frenchGuianaLow\", \"frenchGuianaHigh\"]\r\n          },\r\n          \"GG\": {\r\n            \"country\": \"Guernsey\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"GH\": {\r\n            \"country\": \"Ghana\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"GI\": {\r\n            \"country\": \"Gibraltar\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"GL\": {\r\n            \"country\": \"Greenland\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"greenlandLow\", \"greenlandHigh\"]\r\n          },\r\n          \"GM\": {\r\n            \"country\": \"Gambia\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"GN\": {\r\n            \"country\": \"Guinea\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"guineaLow\", \"guineaHigh\"]\r\n          },\r\n          \"GP\": {\r\n            \"country\": \"Guadeloupe\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"GQ\": {\r\n            \"country\": \"Equatorial Guinea\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"equatorialGuineaLow\", \"equatorialGuineaHigh\"]\r\n          },\r\n          \"GR\": {\r\n            \"country\": \"Greece\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"greeceLow\", \"greeceHigh\"]\r\n          },\r\n          \"GS\": {\r\n            \"country\": \"South Georgia and the South Sandwich Islands\",\r\n            \"continent_code\": \"AN\",\r\n            \"continent\": \"Antarctica\",\r\n            \"maps\": []\r\n          },\r\n          \"GT\": {\r\n            \"country\": \"Guatemala\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"GU\": {\r\n            \"country\": \"Guam\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"GW\": {\r\n            \"country\": \"Guinea-Bissau\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"GY\": {\r\n            \"country\": \"Guyana\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": []\r\n          },\r\n          \"HK\": {\r\n            \"country\": \"Hong Kong\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"hongKongLow\", \"hongKongHigh\"]\r\n          },\r\n          \"HM\": {\r\n            \"country\": \"Heard Island and McDonald Islands\",\r\n            \"continent_code\": \"AN\",\r\n            \"continent\": \"Antarctica\",\r\n            \"maps\": []\r\n          },\r\n          \"HN\": {\r\n            \"country\": \"Honduras\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"hondurasLow\", \"hondurasHigh\"]\r\n          },\r\n          \"HR\": {\r\n            \"country\": \"Croatia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"croatiaLow\", \"croatiaHigh\"]\r\n          },\r\n          \"HT\": {\r\n            \"country\": \"Haiti\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"HU\": {\r\n            \"country\": \"Hungary\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"hungaryLow\", \"hungaryHigh\"]\r\n          },\r\n          \"ID\": {\r\n            \"country\": \"Indonesia\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"indonesiaLow\", \"indonesiaHigh\"]\r\n          },\r\n          \"IE\": {\r\n            \"country\": \"Ireland\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"irelandLow\", \"irelandHigh\"]\r\n          },\r\n          \"IL\": {\r\n            \"country\": \"Israel\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"israelLow\", \"israelHigh\", \"israelPalestineLow\", \"israelPalestineHigh\"]\r\n          },\r\n          \"IM\": {\r\n            \"country\": \"Isle of Man\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"IN\": {\r\n            \"country\": \"India\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"indiaLow\", \"indiaHigh\"]\r\n          },\r\n          \"IO\": {\r\n            \"country\": \"British Indian Ocean Territory\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"IQ\": {\r\n            \"country\": \"Iraq\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"IR\": {\r\n            \"country\": \"Iran, Islamic Republic of\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"IS\": {\r\n            \"country\": \"Iceland\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"icelandLow\", \"icelandHigh\"]\r\n          },\r\n          \"IT\": {\r\n            \"country\": \"Italy\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"italyLow\", \"italyHigh\"]\r\n          },\r\n          \"JE\": {\r\n            \"country\": \"Jersey\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"JM\": {\r\n            \"country\": \"Jamaica\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"JO\": {\r\n            \"country\": \"Jordan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"JP\": {\r\n            \"country\": \"Japan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"japanLow\", \"japanHigh\"]\r\n          },\r\n          \"KE\": {\r\n            \"country\": \"Kenya\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"kenyaLow\", \"kenyaHigh\"]\r\n          },\r\n          \"KG\": {\r\n            \"country\": \"Kyrgyzstan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"kyrgyzstanLow\", \"kyrgyzstanHigh\"]\r\n          },\r\n          \"KH\": {\r\n            \"country\": \"Cambodia\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"cambodiaLow\", \"cambodiaHigh\"]\r\n          },\r\n          \"KI\": {\r\n            \"country\": \"Kiribati\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"KM\": {\r\n            \"country\": \"Comoros\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"KN\": {\r\n            \"country\": \"Saint Kitts and Nevis\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"KP\": {\r\n            \"country\": \"Korea, Democratic People's Republic of\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"northKoreaLow\", \"northKoreaHigh\"]\r\n          },\r\n          \"KR\": {\r\n            \"country\": \"Korea, Republic of\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"southKoreaLow\", \"southKoreaHigh\"]\r\n          },\r\n          \"KT\": {\r\n            \"country\": \"Saint Kitts and Nevis\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"stKittsNevisLow\", \"stKittsNevisHigh\"]\r\n          },\r\n          \"KW\": {\r\n            \"country\": \"Kuwait\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"KY\": {\r\n            \"country\": \"Cayman Islands\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"KZ\": {\r\n            \"country\": \"Kazakhstan\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"kazakhstanLow\", \"kazakhstanHigh\"]\r\n          },\r\n          \"LA\": {\r\n            \"country\": \"Lao People's Democratic Republic\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"LB\": {\r\n            \"country\": \"Lebanon\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"LC\": {\r\n            \"country\": \"Saint Lucia\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"saintLuciaLow\", \"saintLuciaHigh\"]\r\n          },\r\n          \"LI\": {\r\n            \"country\": \"Liechtenstein\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"liechtensteinLow\", \"liechtensteinHigh\"]\r\n          },\r\n          \"LK\": {\r\n            \"country\": \"Sri Lanka\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"sriLankaLow\", \"sriLankaHigh\"]\r\n          },\r\n          \"LR\": {\r\n            \"country\": \"Liberia\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"LS\": {\r\n            \"country\": \"Lesotho\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"LT\": {\r\n            \"country\": \"Lithuania\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"lithuaniaLow\", \"lithuaniaHigh\"]\r\n          },\r\n          \"LU\": {\r\n            \"country\": \"Luxembourg\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"LV\": {\r\n            \"country\": \"Latvia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"latviaLow\", \"latviaHigh\"]\r\n          },\r\n          \"LY\": {\r\n            \"country\": \"Libya\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"MA\": {\r\n            \"country\": \"Morocco\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"moroccoLow\", \"moroccoHigh\"]\r\n          },\r\n          \"MC\": {\r\n            \"country\": \"Monaco\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"MD\": {\r\n            \"country\": \"Moldova, Republic of\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"moldovaLow\", \"moldovaHigh\"]\r\n          },\r\n          \"ME\": {\r\n            \"country\": \"Montenegro\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"MF\": {\r\n            \"country\": \"Saint Martin (French Part)\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"MG\": {\r\n            \"country\": \"Madagascar\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"MH\": {\r\n            \"country\": \"Marshall Islands\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"MK\": {\r\n            \"country\": \"North Macedonia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": []\r\n          },\r\n          \"ML\": {\r\n            \"country\": \"Mali\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"maliLow\", \"maliHigh\"]\r\n          },\r\n          \"MM\": {\r\n            \"country\": \"Myanmar\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"MN\": {\r\n            \"country\": \"Mongolia\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"mongoliaLow\", \"mongoliaHigh\"]\r\n          },\r\n          \"MO\": {\r\n            \"country\": \"Macao\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"MP\": {\r\n            \"country\": \"Northern Mariana Islands\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"MQ\": {\r\n            \"country\": \"Martinique\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"MR\": {\r\n            \"country\": \"Mauritania\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"MS\": {\r\n            \"country\": \"Montserrat\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"MT\": {\r\n            \"country\": \"Malta\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"maltaLow\", \"maltaHigh\"]\r\n          },\r\n          \"MU\": {\r\n            \"country\": \"Mauritius\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"MV\": {\r\n            \"country\": \"Maldives\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"maldivesLow\", \"maldivesHigh\", \"maldivesIslandsLow\", \"maldivesIslandsHigh\"]\r\n          },\r\n          \"MW\": {\r\n            \"country\": \"Malawi\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"MX\": {\r\n            \"country\": \"Mexico\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"mexicoLow\", \"mexicoHigh\"]\r\n          },\r\n          \"MY\": {\r\n            \"country\": \"Malaysia\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"malaysiaLow\", \"malaysiaHigh\"]\r\n          },\r\n          \"MZ\": {\r\n            \"country\": \"Mozambique\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"NA\": {\r\n            \"country\": \"Namibia\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"namibiaLow\", \"namibiaHigh\"]\r\n          },\r\n          \"NC\": {\r\n            \"country\": \"New Caledonia\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"NE\": {\r\n            \"country\": \"Niger\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"NF\": {\r\n            \"country\": \"Norfolk Island\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"NG\": {\r\n            \"country\": \"Nigeria\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"nigeriaLow\", \"nigeriaHigh\"]\r\n          },\r\n          \"NI\": {\r\n            \"country\": \"Nicaragua\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"nicaraguaLow\", \"nicaraguaHigh\"]\r\n          },\r\n          \"NL\": {\r\n            \"country\": \"Netherlands\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"netherlandsLow\", \"netherlandsHigh\"]\r\n          },\r\n          \"NO\": {\r\n            \"country\": \"Norway\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"norwayLow\", \"norwayHigh\"]\r\n          },\r\n          \"NP\": {\r\n            \"country\": \"Nepal\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"nepalLow\", \"nepalHigh\"]\r\n          },\r\n          \"NR\": {\r\n            \"country\": \"Nauru\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"NU\": {\r\n            \"country\": \"Niue\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"NZ\": {\r\n            \"country\": \"New Zealand\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": [\"newZealandLow\", \"newZealandHigh\"]\r\n          },\r\n          \"OM\": {\r\n            \"country\": \"Oman\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"omanLow\", \"omanHigh\"]\r\n          },\r\n          \"PA\": {\r\n            \"country\": \"Panama\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"panamaLow\", \"panamaHigh\"]\r\n          },\r\n          \"PE\": {\r\n            \"country\": \"Peru\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"peruLow\", \"peruHigh\"]\r\n          },\r\n          \"PF\": {\r\n            \"country\": \"French Polynesia\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"PG\": {\r\n            \"country\": \"Papua New Guinea\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"PH\": {\r\n            \"country\": \"Philippines\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"philippinesLow\", \"philippinesHigh\"]\r\n          },\r\n          \"PK\": {\r\n            \"country\": \"Pakistan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"pakistanLow\", \"pakistanHigh\"]\r\n          },\r\n          \"PL\": {\r\n            \"country\": \"Poland\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"polandLow\", \"polandHigh\"]\r\n          },\r\n          \"PM\": {\r\n            \"country\": \"Saint Pierre and Miquelon\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"stPierreMiquelonLow\", \"stPierreMiquelonHigh\"]\r\n          },\r\n          \"PN\": {\r\n            \"country\": \"Pitcairn\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"PR\": {\r\n            \"country\": \"Puerto Rico\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"puertoRicoLow\", \"puertoRicoHigh\"]\r\n          },\r\n          \"PS\": {\r\n            \"country\": \"Palestinian, State of\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"palestineLow\", \"palestineHigh\"]\r\n          },\r\n          \"PT\": {\r\n            \"country\": \"Portugal\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"portugalLow\", \"portugalHigh\", \"portugalRegionsLow\", \"portugalRegionsHigh\"]\r\n          },\r\n          \"PW\": {\r\n            \"country\": \"Palau\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"PY\": {\r\n            \"country\": \"Paraguay\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"paraguayLow\", \"paraguayHigh\"]\r\n          },\r\n          \"QA\": {\r\n            \"country\": \"Qatar\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"qatarLow\", \"qatarHigh\"]\r\n          },\r\n          \"RE\": {\r\n            \"country\": \"Reunion\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"RO\": {\r\n            \"country\": \"Romania\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"romaniaLow\", \"romaniaHigh\"]\r\n          },\r\n          \"RS\": {\r\n            \"country\": \"Serbia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"serbiaLow\", \"serbiaHigh\", \"serbiaNoKosovoLow\", \"serbiaNoKosovoHigh\"]\r\n          },\r\n          \"RU\": {\r\n            \"country\": \"Russian Federation\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"russiaLow\", \"russiaHigh\", \"russiaCrimeaLow\", \"russiaCrimeaHigh\"]\r\n          },\r\n          \"RW\": {\r\n            \"country\": \"Rwanda\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"SA\": {\r\n            \"country\": \"Saudi Arabia\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"saudiArabiaLow\", \"saudiArabiaHigh\"]\r\n          },\r\n          \"SB\": {\r\n            \"country\": \"Solomon Islands\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": [\"solomonIslandsLow\", \"solomonIslandsHigh\"]\r\n          },\r\n          \"SC\": {\r\n            \"country\": \"Seychelles\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"seychellesLow\", \"seychellesHigh\"]\r\n          },\r\n          \"SD\": {\r\n            \"country\": \"Sudan\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"sudanLow\", \"sudanHigh\"]\r\n          },\r\n          \"SE\": {\r\n            \"country\": \"Sweden\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"swedenLow\", \"swedenHigh\"]\r\n          },\r\n          \"SG\": {\r\n            \"country\": \"Singapore\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"singaporeLow\", \"singaporeHigh\"]\r\n          },\r\n          \"SH\": {\r\n            \"country\": \"Saint Helena, Ascension and Tristan da Cunha\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"saintHelenaLow\", \"saintHelenaHigh\"]\r\n          },\r\n          \"SI\": {\r\n            \"country\": \"Slovenia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"sloveniaLow\", \"sloveniaHigh\", \"sloveniaRegionsLow\", \"sloveniaRegionsHigh\"]\r\n          },\r\n          \"SJ\": {\r\n            \"country\": \"Svalbard and Jan Mayen\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"svalbardLow\", \"svalbardHigh\"]\r\n          },\r\n          \"SK\": {\r\n            \"country\": \"Slovakia\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"slovakiaLow\", \"slovakiaHigh\"]\r\n          },\r\n          \"SL\": {\r\n            \"country\": \"Sierra Leone\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"SM\": {\r\n            \"country\": \"San Marino\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"sanMarinoLow\", \"sanMarinoHigh\"]\r\n          },\r\n          \"SN\": {\r\n            \"country\": \"Senegal\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"senegalLow\", \"senegalHigh\"]\r\n          },\r\n          \"SO\": {\r\n            \"country\": \"Somalia\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"somaliaLow\", \"somaliaHigh\"]\r\n          },\r\n          \"SR\": {\r\n            \"country\": \"Suriname\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": []\r\n          },\r\n          \"SS\": {\r\n            \"country\": \"South Sudan\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"ST\": {\r\n            \"country\": \"Sao Tome and Principe\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"saoTomePrincipeLow\", \"saoTomePrincipeHigh\"]\r\n          },\r\n          \"SV\": {\r\n            \"country\": \"El Salvador\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"elSalvadorLow\", \"elSalvadorHigh\"]\r\n          },\r\n          \"SX\": {\r\n            \"country\": \"Sint Maarten (Dutch Part)\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"SY\": {\r\n            \"country\": \"Syrian Arab Republic\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"syriaLow\", \"syriaHigh\"]\r\n          },\r\n          \"SZ\": {\r\n            \"country\": \"Swaziland\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"eswatiniLow\", \"eswatiniHigh\"]\r\n          },\r\n          \"TC\": {\r\n            \"country\": \"Turks and Caicos Islands\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"TD\": {\r\n            \"country\": \"Chad\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"chadLow\", \"chadHigh\"]\r\n          },\r\n          \"TF\": {\r\n            \"country\": \"French Southern Territories\",\r\n            \"continent_code\": \"AN\",\r\n            \"continent\": \"Antarctica\",\r\n            \"maps\": []\r\n          },\r\n          \"TG\": {\r\n            \"country\": \"Togo\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"TH\": {\r\n            \"country\": \"Thailand\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"thailandLow\", \"thailandHigh\"]\r\n          },\r\n          \"TJ\": {\r\n            \"country\": \"Tajikistan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"tajikistanLow\", \"tajikistanHigh\"]\r\n          },\r\n          \"TK\": {\r\n            \"country\": \"Tokelau\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"TL\": {\r\n            \"country\": \"Timor-Leste\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"TM\": {\r\n            \"country\": \"Turkmenistan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"TN\": {\r\n            \"country\": \"Tunisia\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"tunisiaLow\", \"tunisiaHigh\"]\r\n          },\r\n          \"TO\": {\r\n            \"country\": \"Tonga\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"TR\": {\r\n            \"country\": \"Turkey\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"turkeyLow\", \"turkeyHigh\"]\r\n          },\r\n          \"TT\": {\r\n            \"country\": \"Trinidad and Tobago\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"TV\": {\r\n            \"country\": \"Tuvalu\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"TW\": {\r\n            \"country\": \"Taiwan, Province of China\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": []\r\n          },\r\n          \"TZ\": {\r\n            \"country\": \"Tanzania, United Republic of\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"tanzaniaLow\", \"tanzaniaHigh\"]\r\n          },\r\n          \"UA\": {\r\n            \"country\": \"Ukraine\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"ukraineLow\", \"ukraineHigh\"]\r\n          },\r\n          \"UG\": {\r\n            \"country\": \"Uganda\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"UM\": {\r\n            \"country\": \"United States Minor Outlying Islands\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"US\": {\r\n            \"country\": \"United States\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"usaLow\", \"usaHigh\", \"usaTerritoriesLow\", \"usaTerritoriesHigh\", \"usaTerritories2Low\", \"usaTerritories2High\"]\r\n          },\r\n          \"UY\": {\r\n            \"country\": \"Uruguay\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": []\r\n          },\r\n          \"UZ\": {\r\n            \"country\": \"Uzbekistan\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"uzbekinstanLow\", \"uzbekinstanHigh\"]\r\n          },\r\n          \"VA\": {\r\n            \"country\": \"Holy See (Vatican City State)\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"vaticanLow\", \"vaticanHigh\"]\r\n          },\r\n          \"VC\": {\r\n            \"country\": \"Saint Vincent and the Grenadines\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": [\"saintVincentLow\", \"saintVincentHigh\"]\r\n          },\r\n          \"VE\": {\r\n            \"country\": \"Venezuela, Bolivarian Republic of\",\r\n            \"continent_code\": \"SA\",\r\n            \"continent\": \"South America\",\r\n            \"maps\": [\"venezuelaLow\", \"venezuelaHigh\"]\r\n          },\r\n          \"VG\": {\r\n            \"country\": \"Virgin Islands, British\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"VI\": {\r\n            \"country\": \"Virgin Islands, U.S.\",\r\n            \"continent_code\": \"NA\",\r\n            \"continent\": \"North America\",\r\n            \"maps\": []\r\n          },\r\n          \"VN\": {\r\n            \"country\": \"Viet Nam\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"vietnamLow\", \"vietnamHigh\"]\r\n          },\r\n          \"VU\": {\r\n            \"country\": \"Vanuatu\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"WF\": {\r\n            \"country\": \"Wallis and Futuna\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": []\r\n          },\r\n          \"WS\": {\r\n            \"country\": \"Samoa\",\r\n            \"continent_code\": \"OC\",\r\n            \"continent\": \"Oceania\",\r\n            \"maps\": [\"samoaLow\", \"samoaHigh\"]\r\n          },\r\n          \"YE\": {\r\n            \"country\": \"Yemen\",\r\n            \"continent_code\": \"AS\",\r\n            \"continent\": \"Asia\",\r\n            \"maps\": [\"yemenLow\", \"yemenHigh\"]\r\n          },\r\n          \"YT\": {\r\n            \"country\": \"Mayotte\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": []\r\n          },\r\n          \"ZA\": {\r\n            \"country\": \"South Africa\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"southAfricaLow\", \"southAfricaHigh\"]\r\n          },\r\n          \"ZM\": {\r\n            \"country\": \"Zambia\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"zambiaLow\", \"zambiaHigh\"]\r\n          },\r\n          \"ZW\": {\r\n            \"country\": \"Zimbabwe\",\r\n            \"continent_code\": \"AF\",\r\n            \"continent\": \"Africa\",\r\n            \"maps\": [\"zimbabweLow\", \"zimbabweHigh\"]\r\n          },\r\n          \"XK\": {\r\n            \"country\": \"Kosovo\",\r\n            \"continent_code\": \"EU\",\r\n            \"continent\": \"Europe\",\r\n            \"maps\": [\"kosovoLow\", \"kosovoHigh\"]\r\n          }\r\n        };\r\n\r\n\r\n        var continents = {\r\n          \"AF\": 0,\r\n          \"AN\": 1,\r\n          \"AS\": 2,\r\n          \"EU\": 3,\r\n          \"NA\": 4,\r\n          \"OC\": 5,\r\n          \"SA\": 6\r\n        }\r\n\r\n        // Create map instance\r\n        var chart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n        chart.projection = new am4maps.projections.Miller();\r\n\r\n        // Create map polygon series for world map\r\n        var worldSeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        worldSeries.useGeodata = true;\r\n        worldSeries.geodata = am4geodata_worldLow;\r\n        worldSeries.exclude = [\"AQ\"];\r\n\r\n        var worldPolygon = worldSeries.mapPolygons.template;\r\n        worldPolygon.tooltipText = \"{name}\";\r\n        worldPolygon.nonScalingStroke = true;\r\n        worldPolygon.strokeOpacity = 0.5;\r\n        worldPolygon.fill = am4core.color(\"#eee\");\r\n        worldPolygon.propertyFields.fill = \"color\";\r\n\r\n        var hs = worldPolygon.states.create(\"hover\");\r\n        hs.properties.fill = chart.colors.getIndex(9);\r\n\r\n\r\n        // Create country specific series (but hide it for now)\r\n        var countrySeries = chart.series.push(new am4maps.MapPolygonSeries());\r\n        countrySeries.useGeodata = true;\r\n        countrySeries.hide();\r\n        countrySeries.geodataSource.events.on(\"done\", function (ev) {\r\n          worldSeries.hide();\r\n          countrySeries.show();\r\n        });\r\n\r\n        var countryPolygon = countrySeries.mapPolygons.template;\r\n        countryPolygon.tooltipText = \"{name}\";\r\n        countryPolygon.nonScalingStroke = true;\r\n        countryPolygon.strokeOpacity = 0.5;\r\n        countryPolygon.fill = am4core.color(\"#eee\");\r\n\r\n        hs = countryPolygon.states.create(\"hover\");\r\n        hs.properties.fill = chart.colors.getIndex(9);\r\n\r\n        // Set up click events\r\n        worldPolygon.events.on(\"hit\", function (ev) {\r\n          ev.target.series.chart.zoomToMapObject(ev.target);\r\n          var map = ev.target.dataItem.dataContext.map;\r\n          if (map) {\r\n            ev.target.isHover = false;\r\n            countrySeries.geodataSource.url = \"https://www.amcharts.com/lib/4/geodata/json/\" + map + \".json\";\r\n            countrySeries.geodataSource.load();\r\n          }\r\n        });\r\n\r\n        // Set up data for countries\r\n        var data = [];\r\n        for (var id in countries) {\r\n          if (countries.hasOwnProperty(id)) {\r\n            var country = countries[id];\r\n            if (country.maps.length) {\r\n              data.push({\r\n                id: id,\r\n                color: chart.colors.getIndex(continents[country.continent_code]),\r\n                map: country.maps[0]\r\n              });\r\n            }\r\n          }\r\n        }\r\n        worldSeries.data = data;\r\n\r\n        // Zoom control\r\n        chart.zoomControl = new am4maps.ZoomControl();\r\n\r\n        var homeButton = new am4core.Button();\r\n        homeButton.events.on(\"hit\", function () {\r\n          worldSeries.show();\r\n          countrySeries.hide();\r\n          chart.goHome();\r\n        });\r\n\r\n        homeButton.icon = new am4core.Sprite();\r\n        homeButton.padding(7, 5, 7, 5);\r\n        homeButton.width = 30;\r\n        homeButton.icon.path = \"M16,8 L14,8 L14,16 L10,16 L10,10 L6,10 L6,16 L2,16 L2,8 L0,8 L8,0 L16,8 Z M16,8\";\r\n        homeButton.marginBottom = 10;\r\n        homeButton.parent = chart.zoomControl;\r\n        homeButton.insertBefore(chart.zoomControl.plusButton);\r\n\r\n      });\r\n    });\r\n  }\r\n}\r\nexport { index, dynamicChart, initSelect2, getActiveLink }\r\n\r\n"]},"metadata":{},"sourceType":"module"}